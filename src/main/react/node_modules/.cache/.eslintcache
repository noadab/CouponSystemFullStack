[{"C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\index.js":"1","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\App.js":"2","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\store\\index.js":"3","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\store\\auth.js":"4","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\pages\\AddCouponForm.js":"5","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\pages\\Companies.js":"6","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\pages\\Customers.js":"7","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\pages\\CompanyDashboard.js":"8","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\pages\\Welcome.js":"9","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Header.js":"10","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\pages\\CustomerDashboard.js":"11","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\pages\\LoginPage.js":"12","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\CouponList.js":"13","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\CouponFetch.js":"14","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\CreateCoupon.js":"15","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Client\\ClientFetch.js":"16","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\UI\\card\\Card.js":"17","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\helper\\fetchWrapper.js":"18","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\login\\Auth.js":"19","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\CouponsFilter.js":"20","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\Coupon.js":"21","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Client\\ClientList.js":"22","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Client\\ClientForm.js":"23","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\UI\\button\\AuthButton.js":"24","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\UI\\CardCoupon.js":"25","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\UpdateCoupon.js":"26","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Client\\Client.js":"27","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\UI\\CardClient.js":"28"},{"size":391,"mtime":1643096624070,"results":"29","hashOfConfig":"30"},{"size":2478,"mtime":1643912223999,"results":"31","hashOfConfig":"30"},{"size":191,"mtime":1643882555211,"results":"32","hashOfConfig":"30"},{"size":1208,"mtime":1644062962400,"results":"33","hashOfConfig":"30"},{"size":348,"mtime":1643112800402,"results":"34","hashOfConfig":"30"},{"size":280,"mtime":1643893696832,"results":"35","hashOfConfig":"30"},{"size":216,"mtime":1643623141115,"results":"36","hashOfConfig":"30"},{"size":486,"mtime":1643882555203,"results":"37","hashOfConfig":"30"},{"size":1600,"mtime":1643910644518,"results":"38","hashOfConfig":"30"},{"size":1960,"mtime":1643895556253,"results":"39","hashOfConfig":"30"},{"size":485,"mtime":1643881028964,"results":"40","hashOfConfig":"30"},{"size":166,"mtime":1643882555203,"results":"41","hashOfConfig":"30"},{"size":641,"mtime":1643648466715,"results":"42","hashOfConfig":"30"},{"size":2714,"mtime":1643885155846,"results":"43","hashOfConfig":"30"},{"size":4666,"mtime":1643881028958,"results":"44","hashOfConfig":"30"},{"size":3591,"mtime":1643971430172,"results":"45","hashOfConfig":"30"},{"size":245,"mtime":1642254926037,"results":"46","hashOfConfig":"30"},{"size":2488,"mtime":1643970934213,"results":"47","hashOfConfig":"30"},{"size":4801,"mtime":1643882555199,"results":"48","hashOfConfig":"30"},{"size":2090,"mtime":1643648185946,"results":"49","hashOfConfig":"30"},{"size":3483,"mtime":1643892781355,"results":"50","hashOfConfig":"30"},{"size":560,"mtime":1643881028953,"results":"51","hashOfConfig":"30"},{"size":4525,"mtime":1643881028952,"results":"52","hashOfConfig":"30"},{"size":400,"mtime":1642255723410,"results":"53","hashOfConfig":"30"},{"size":885,"mtime":1643881028946,"results":"54","hashOfConfig":"30"},{"size":4873,"mtime":1643881028958,"results":"55","hashOfConfig":"30"},{"size":2214,"mtime":1643881028949,"results":"56","hashOfConfig":"30"},{"size":910,"mtime":1643633549106,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"18fa32m",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\index.js",[],["126","127"],"C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\App.js",["128","129"],"C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\store\\index.js",[],"C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\store\\auth.js",[],"C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\pages\\AddCouponForm.js",[],"C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\pages\\Companies.js",[],"C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\pages\\Customers.js",[],"C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\pages\\CompanyDashboard.js",["130","131","132","133"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport CouponFetch from '../components/Coupon/CouponFetch'\r\nimport ClientFetch from \"../components/Client/ClientFetch\";\r\n\r\nfunction CompanyDashboard() {\r\n \r\n  return (\r\n    <React.Fragment>\r\n      <div >\r\n        <ClientFetch requestClient=\"company\"/>\r\n      </div>\r\n      \r\n      <CouponFetch />\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CompanyDashboard;\r\n","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\pages\\Welcome.js",["134","135","136"],"C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Header.js",["137"],"import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport classes from './Header.module.css';\r\nimport { authActions } from '../store/auth';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const isAuth = useSelector((state) => state.auth.isAuthenticated);\r\n  const userType = useSelector(state => state.auth.userType);\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(authActions.logout());\r\n  };\r\n\r\n  return (\r\n    <header className={classes.header}>\r\n      <h1>Coupon System</h1>\r\n      <nav>\r\n        <ul>\r\n\r\n          <li>\r\n            <NavLink activeClassName={classes.active} to=\"/HomePage\">\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n\r\n          {isAuth && userType!=\"admin\" &&\r\n          <li>\r\n            <NavLink activeClassName={classes.active} to=\"/dashboard\">\r\n              Dashboard\r\n            </NavLink>\r\n          </li>}\r\n\r\n          {userType === \"company\" &&\r\n            <li>\r\n              <NavLink activeClassName={classes.active} to=\"/addCoupon\">\r\n                Add Coupon\r\n              </NavLink>\r\n            </li>}\r\n\r\n            {userType === \"admin\" &&\r\n            <li>\r\n              <NavLink activeClassName={classes.active} to=\"/companies\">\r\n                Companies\r\n              </NavLink>\r\n            </li>}\r\n\r\n            {userType === \"admin\" &&\r\n            <li>\r\n              <NavLink activeClassName={classes.active} to=\"/customers\">\r\n                Customers\r\n              </NavLink>\r\n            </li>}\r\n\r\n          {!isAuth && \r\n          <li>\r\n            <NavLink activeClassName={classes.active} className={classes.loginButton} to=\"/\">\r\n            Login\r\n          </NavLink>\r\n          </li>}\r\n\r\n          {isAuth && (\r\n            <li>\r\n              <button onClick={logoutHandler}>Logout</button>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\pages\\CustomerDashboard.js",["138","139","140","141"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ClientFetch from \"../components/Client/ClientFetch\";\r\n\r\nimport CouponFetch from '../components/Coupon/CouponFetch'\r\n\r\n\r\nfunction CompanyDashboard() {\r\n  \r\n    return(\r\n        <React.Fragment>\r\n          <ClientFetch requestClient=\"customer\"/>\r\n            \r\n            <CouponFetch/>\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default CompanyDashboard;","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\pages\\LoginPage.js",[],"C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\CouponList.js",[],"C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\CouponFetch.js",["142","143","144","145"],"import React, { useState, useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport fetchWrapper from '../../helper/fetchWrapper'\r\nimport CouponList from './CouponList'\r\nimport CouponsFilter from './CouponsFilter'\r\n\r\nconst CouponFetch = () => {\r\n\r\n  const userType = useSelector(state => state.auth.userType);\r\n  const token = useSelector(state => state.auth.token);\r\n\r\n  const [coupons, setCoupons] = useState([]);\r\n  const [isCouponsFetch, setIsCouponsFetch] = useState(false);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchCouponsHandler = useCallback(async (event) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    let data;\r\n    try {\r\n      if ((event.value) != (\"No filter\")) {\r\n        data = await fetchWrapper.get(\"/\" + userType + \"/all\" + event.type + \"/\" + event.value + \"/\" + token)\r\n      }\r\n      else {\r\n        data = await fetchWrapper.get(\"/\" + userType + \"/all/\" + token)\r\n      }\r\n        const transformedCoupons = data.map((couponData) => {\r\n          return {\r\n            id: couponData.id,\r\n            title: couponData.title,\r\n            category: couponData.category,\r\n            description: couponData.description,\r\n            startDate: couponData.startDate,\r\n            endDate: couponData.endDate,\r\n            amount: couponData.amount,\r\n            price: couponData.price,\r\n            image: couponData.image\r\n          };\r\n        });\r\n        setCoupons(transformedCoupons);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      setError(error.message);\r\n\r\n    }\r\n    setIsCouponsFetch(true);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchCouponsHandler({value:'',type:''});\r\n  }, []);\r\n\r\n  let content = <section>Found no coupons.</section>;\r\n\r\n  if (coupons.length > 0) {\r\n    content = <CouponList coupons={coupons} />;\r\n  }\r\n\r\n  if (error) {\r\n    content = <section>{error}</section>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    content = <section>Loading...</section>;\r\n  }\r\n\r\n  if (!isCouponsFetch) {\r\n    content = null;\r\n  }\r\n\r\n  const closeCouponsListHandler = () => {\r\n    setIsCouponsFetch(false);\r\n  }\r\n  const openCouponsListHandler = ()=> {\r\n    fetchCouponsHandler({value:'',type:''});\r\n    setIsCouponsFetch(true);\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      {isCouponsFetch && <button onClick={closeCouponsListHandler} >Close coupons</button>}\r\n      {isCouponsFetch && <CouponsFilter onFilter={fetchCouponsHandler} />}\r\n      {!isCouponsFetch && <button onClick={openCouponsListHandler}>Fetch coupons</button>}\r\n      {content != null && <div>{content}</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CouponFetch;","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\CreateCoupon.js",["146","147","148"],"import React, { Fragment, useCallback, useRef, useState } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\n\r\nimport classes from './CreateCoupon.module.css';\r\nimport fetchWrapper from '../../helper/fetchWrapper'\r\n\r\nfunction CreateCoupon(props) {\r\n\r\n  const token = useSelector((state) => state.auth.token);\r\n  const userType= useSelector ((state) => state.auth.userType);\r\n  const titleRef = useRef(\"\");\r\n  const descriptionRef = useRef(\"\");\r\n  const releaseDateRef= useRef(\"\");\r\n  const [releaseDateState, setRelealseDate] = useState(\"\");\r\n  const expiredDateRef = useRef(\"\");\r\n  const categoryRef = useRef(\"\");\r\n  const amountRef = useRef(\"\");\r\n  const priceRef = useRef(\"\");\r\n  const imageRef = useRef(\"\");\r\n  const [imageLoadState, setImageLoad] = useState(\"\");\r\n\r\n  const categories = [\r\n    { value: \"food\", label: \"Food\" },\r\n    { value: \"electricity\", label: \"Electricity\" },\r\n    { value: \"restaurant\", label: \"Restaurant\" },\r\n    { value: \"vacation\", label: \"Vacation\" },\r\n  ];\r\n\r\n  let required = true;\r\n  const todayDate = new Date().toISOString().substring(0, 10);\r\n\r\n  const submitHandler = useCallback(async (event) => {\r\n    event.preventDefault();\r\n\r\n    const couponToSend = {\r\n      title: titleRef.current.value,\r\n      description: descriptionRef.current.value,\r\n      category: categoryRef.current.state.selectValue[0].label,\r\n      startDate: releaseDateState,\r\n      endDate: expiredDateRef.current.value,\r\n      amount: amountRef.current.value,\r\n      price: priceRef.current.value,\r\n      image: imageRef.current.value,\r\n    };\r\n\r\n    console.log(couponToSend);\r\n    const method = \"POST\";\r\n    const path=\"/\"+userType+\"/add\";\r\n    \r\n    try {\r\n      const data = await fetchWrapper.fetch(method, path, couponToSend, token, () => {\r\n        console.log(\"error\");\r\n    })\r\n    console.log(\"coupon sent to server: \" + couponToSend);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n    //setIsLoading(false);\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <section>\r\n    <form onSubmit={submitHandler} className={classes.control} >\r\n      <div >\r\n        <label htmlFor=\"title\">Title</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"title\"\r\n          ref={titleRef}\r\n          required={required}\r\n        />\r\n      </div>\r\n      <div >\r\n        <label htmlFor=\"description\">Coupon description</label>\r\n        <textarea\r\n          id=\"description\"\r\n          rows=\"3\"\r\n          ref={descriptionRef}\r\n          required={required} />\r\n      </div>\r\n      <div >\r\n        <label htmlFor=\"releaseDate\">Release Date</label>\r\n        <input\r\n          id=\"releaseDate\"\r\n          type=\"date\"\r\n          min={todayDate}\r\n          ref= {releaseDateRef}\r\n          onChange={e => setRelealseDate(e.target.value)}\r\n          required={{ required }} />\r\n      </div>\r\n      <div >\r\n        <label htmlFor=\"expiredDate\">Expired Date</label>\r\n        <input\r\n          id=\"expiredDate\"\r\n          type=\"date\"\r\n          min={releaseDateState}\r\n          ref={expiredDateRef}\r\n          required={required} />\r\n      </div>\r\n      <div >\r\n        <label htmlFor=\"select\">Category</label>\r\n        <Select\r\n          id=\"select\"\r\n          options={categories}\r\n          ref={categoryRef}\r\n          required={required}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"price\">price</label>\r\n        <input\r\n          id=\"price\"\r\n          type=\"number\"\r\n          min=\"1\"\r\n          step=\"0.01\"\r\n          ref={priceRef}\r\n          required={required} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"amount\">Amount of available coupons</label>\r\n        <input\r\n          type=\"number\"\r\n          min=\"1\"\r\n          step=\"1\"\r\n          id=\"amount\"\r\n          ref={amountRef}\r\n          required={required} />\r\n      </div>\r\n      <div >\r\n        <div className={classes['control-image']} onChange={e => setImageLoad(e.target.value)} required={required}>\r\n          <label htmlFor=\"imageLoad\">Image</label>\r\n          <div><input type=\"radio\" value=\"URL\" name=\"imageLoad\" />URL</div>\r\n          <div><input type=\"radio\" value=\"File\" name=\"imageLoad\" />File</div>\r\n        </div>\r\n        {imageLoadState === \"URL\" && <input type=\"url\" id=\"image\" ref={imageRef} required={required} />}\r\n        {imageLoadState === \"File\" && <input type=\"file\" id=\"image\" ref={imageRef} required={required} />}\r\n      </div>\r\n      <button type=\"submit\">Add Coupon</button>\r\n    </form>\r\n    </section>\r\n  );\r\n}\r\n\r\n// {ReactDOM.createPortal(<Popup show={showPopup} popuptext=\"wrong movie details!\"/>\r\n// , document.getElementById(\"popup-place-holder\"))}\r\n\r\nexport default CreateCoupon;\r\n","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Client\\ClientFetch.js",["149","150","151","152","153","154","155","156","157","158","159","160"],"C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\UI\\card\\Card.js",[],"C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\helper\\fetchWrapper.js",["161","162","163","164","165","166"],"C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\login\\Auth.js",["167"],"import { useDispatch } from \"react-redux\";\r\n\r\nimport classes from \"./Auth.module.css\";\r\nimport { authActions } from \"../../store/auth\";\r\nimport React, { useCallback, useReducer } from \"react\";\r\n\r\nimport Select from \"react-select\";\r\nimport AuthButton from \"../../UI/button/AuthButton\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst emailReducer = (state, action) => {\r\n  if (action.type === 'USER_INPUT') {\r\n    return { value: action.value };\r\n    // , isValid: action.val.includes('@') };\r\n  }\r\n  if (action.type === 'INPUT_BLUR') {\r\n    return { value: state.value };\r\n    //, isValid: state.value.includes('@') };\r\n  }\r\n  return { value: '', isValid: false };\r\n};\r\n\r\nconst passwordReducer = (state, action) => {\r\n  if (action.type === 'USER_INPUT') {\r\n    return { value: action.value };\r\n    //, isValid: action.val.trim().length > 6 };\r\n  }\r\n  if (action.type === 'INPUT_BLUR') {\r\n    return { value: state.value };\r\n    //, isValid: state.value.trim().length > 6 };\r\n  }\r\n  return { value: '' }\r\n  //, isValid: false };\r\n};\r\n\r\n\r\nconst userTypeReducer = (state, action) => {\r\n  if (action.type === 'USER_INPUT') {\r\n    return { value: action.value };\r\n    //, isValid: action.val.trim().length > 6 };\r\n  }\r\n  if (action.type === 'INPUT_BLUR') {\r\n    return { value: state.value };\r\n    //, isValid: state.value.trim().length > 6 };\r\n  }\r\n  return { value: '' }\r\n  //, isValid: false };\r\n};\r\n\r\n\r\nconst Auth = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const options = [\r\n    { value: \"admin\", label: \"Admin\" },\r\n    { value: \"company\", label: \"Company\" },\r\n    { value: \"customer\", label: \"Customer\" },\r\n  ];\r\n\r\n  const emailChangeHandler = (event) => {\r\n    dispatchEmail({ type: 'USER_INPUT', value: event.target.value });\r\n  };\r\n\r\n  const passwordChangeHandler = (event) => {\r\n    dispatchPassword({ type: 'USER_INPUT', value: event.target.value });\r\n  };\r\n\r\n  const userTypeChangeHandler = (event) => {\r\n    dispatchUserType({ type: 'USER_INPUT', value: event.value });\r\n  };\r\n\r\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\r\n    value: '',\r\n    //isValid: null,\r\n  });\r\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\r\n    value: '',\r\n    //isValid: null,\r\n  });\r\n\r\n  const [userTypeState, dispatchUserType] = useReducer(userTypeReducer, {\r\n    value: '',\r\n    //isValid: null,\r\n  });\r\n\r\n\r\n  const submitHandler =useCallback(async (event) => {\r\n      try {\r\n        event.preventDefault();\r\n        const creds = {\r\n          email: emailState.value,\r\n          password: passwordState.value\r\n        };\r\n  \r\n        // POST request using fetch inside useEffect React hook\r\n        const requestOptions = {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(creds),\r\n        };\r\n  \r\n        console.log(\"post: \"+JSON.stringify(creds));\r\n        const response = await fetch(\"/\"+userTypeState.value+\"/login\", requestOptions);\r\n\r\n        if (!response.ok) {\r\n          window.alert(await response.text());\r\n          dispatch(authActions.logout());\r\n          throw new Error(\"Authintication fails!\");\r\n        }\r\n        console.log(\"Okay!\");\r\n        const token = await response.text();\r\n        console.log(\"Got token: \"+token);\r\n        dispatch(authActions.userTypeHandler(userTypeState.value));\r\n        dispatch(authActions.login(token));\r\n        history.push(\"/dashboard\")\r\n\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    } , [emailState, passwordState, userTypeState, dispatch])\r\n  \r\n\r\n  return (\r\n    <main className={classes.auth}>\r\n      <section>\r\n        <form id=\"loginform\" >\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={emailState.value}\r\n              onChange={emailChangeHandler} />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              input={passwordState.value}\r\n              onChange={passwordChangeHandler} />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"select\">Role</label>\r\n            \r\n            <Select\r\n              id=\"select\"\r\n              options={options}\r\n              value={options.find(obj => obj.value === userTypeState)}\r\n              onChange={userTypeChangeHandler} \r\n            />\r\n            \r\n          </div>\r\n          <AuthButton type=\"submit\" form=\"loginform\" onClick={submitHandler}>Login</AuthButton>\r\n        </form>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\CouponsFilter.js",["168","169","170"],"import React, {useReducer, useRef} from 'react';\r\nimport Select from \"react-select\";\r\n\r\nimport classes from './CouponsFilter.module.css'\r\n\r\nconst categories = [\r\n  { value: \"No filter\", label:\"No filter\"},\r\n  { value: \"food\", label: \"Food\" },\r\n  { value: \"Electricity\", label: \"Electricity\" },\r\n  { value: \"restaurant\", label: \"Restaurant\" },\r\n  { value: \"vacation\", label: \"Vacation\" },\r\n];\r\n\r\nconst CouponsFilter = (props) =>\r\n{\r\n  const categoryRef = useRef(\"\");\r\n  const maxPriceRef= useRef(\"\");\r\n\r\n  const filterCategorySubmitHandler =()=>{\r\n    if (categoryRef.current.state.selectValue[0].value!=''){\r\n      maxPriceRef.current.value='';\r\n      props.onFilter({type:\"ByCategory\", value:categoryRef.current.state.selectValue[0].label});\r\n    }\r\n\r\n  }\r\n  const filterMaxPriceSubmitHandler =()=>{\r\n    if (maxPriceRef.current.value!=''){\r\n      categoryRef.current.state.selectValue[0].label='No filter'\r\n      props.onFilter({type:\"ByMaxPrice\", value:maxPriceRef.current.value});\r\n    }\r\n  }\r\n  return (\r\n      \r\n        <div className={classes[\"coupons-filter\"]}>\r\n        <p className={classes[\"coupons-filter-box\"]}>\r\n          <label className=\"coupons-filter__label\" htmlFor='coupons-filter__select'>Filter by category</label>\r\n          <Select className=\"coupons-filter__select\"  \r\n                  id=\"select\"\r\n                  options={categories}\r\n                  ref={categoryRef}\r\n                  >\r\n          </Select>\r\n          <button type=\"submit\" onClick= {filterCategorySubmitHandler} >filter</button>\r\n          </p>\r\n\r\n          <p className={classes[\"coupons-filter-box\"]} >\r\n          <label className=\"coupons-filter__label\" htmlFor=\"maxPrice\">Filter by max price</label>\r\n          <input className=\"coupons-filter__input\" id=\"maxPrice\"\r\n                 type=\"number\"\r\n                 step=\"1\"\r\n                 min=\"1\"\r\n                 ref={maxPriceRef}>\r\n          </input>\r\n          <button type=\"submit\" onClick= {filterMaxPriceSubmitHandler} >filter</button>\r\n          </p>\r\n        </div>\r\n      \r\n  );\r\n\r\n}\r\n\r\nexport default CouponsFilter\r\n\r\n","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\Coupon.js",["171","172","173","174","175","176"],"C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Client\\ClientList.js",[],"C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Client\\ClientForm.js",["177","178"],"import React, { useCallback, useRef } from \"react\";\r\n\r\nimport classes from './Client.module.css'\r\nimport fetchWrapper from \"../../helper/fetchWrapper\"\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ClientForm = (props) => {\r\n\r\n    const userType = useSelector(state => state.auth.userType);\r\n    const token = useSelector(state => state.auth.token);\r\n\r\n    const requestClient = props.requestClient;\r\n    const emailRef = useRef(\"\");\r\n    const passwordRef = useRef(\"\");\r\n    const nameRef = useRef(\"\");\r\n    const firstNameRef = useRef(\"\");\r\n    const lastNameRef = useRef(\"\");\r\n\r\n    const submitHandler = useCallback(async (event) => {\r\n        event.preventDefault();\r\n        let clientToSend;\r\n        if (requestClient === \"company\") {\r\n            clientToSend = {\r\n                name: nameRef.current.value,\r\n                password: passwordRef.current.value,\r\n                email: emailRef.current.value\r\n            }\r\n        }\r\n        if (requestClient === \"customer\") {\r\n            clientToSend = {\r\n                firstName: firstNameRef.current.value,\r\n                lastName: lastNameRef.current.value,\r\n                password: passwordRef.current.value,\r\n                email: emailRef.current.value,\r\n\r\n            }\r\n\r\n        }\r\n        let method;\r\n        let path;\r\n        if (!props.defaultData) {\r\n            method = \"POST\";\r\n            path = userType + \"/add/\" + requestClient\r\n        }\r\n        else {\r\n            clientToSend = { id: props.defaultData.id, ...clientToSend }\r\n            method = \"PUT\";\r\n            path = userType + \"/update/\" + requestClient\r\n\r\n        }\r\n        try {\r\n            const data = await fetchWrapper.fetch(method, path, clientToSend, token, () => {\r\n                console.log(\"error\");\r\n            })\r\n            clientToSend = { clientType: props.defaultData.clientType, ...clientToSend }\r\n            console.log(clientToSend)\r\n            props.onSave(clientToSend);\r\n            console.log(\"client sent to server: \" + clientToSend);\r\n\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n\r\n    })\r\n\r\n    const onCancel = () => {\r\n        if (window.confirm(\"Are you sure you want to cancel?\")) {\r\n            props.onCancel();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler} className={classes['client-form']}>\r\n            {requestClient === \"company\" && <div >\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                    type=\"name\"\r\n                    id=\"name\"\r\n                    ref={nameRef}\r\n                    required={true}\r\n                    defaultValue={!props.defaultData ? \"\" : props.defaultData.name}\r\n                />\r\n            </div>}\r\n            {requestClient === \"customer\" && <div >\r\n                <label htmlFor=\"firstName\">First name</label>\r\n                <input\r\n                    type=\"firstName\"\r\n                    id=\"firstName\"\r\n                    ref={firstNameRef}\r\n                    required={true}\r\n                    defaultValue={!props.defaultData ? \"\" : props.defaultData.firstName}\r\n                />\r\n            </div>}\r\n            {requestClient === \"customer\" && <div >\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                <input\r\n                    type=\"lastName\"\r\n                    id=\"lastName\"\r\n                    ref={lastNameRef}\r\n                    required={true}\r\n                    defaultValue={!props.defaultData ? \"\" : props.defaultData.lastName}\r\n\r\n                />\r\n            </div>}\r\n\r\n            <div >\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    ref={emailRef}\r\n                    defaultValue={!props.defaultData ? \"\" : props.defaultData.email}\r\n                />\r\n            </div>\r\n            <div >\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    ref={passwordRef}\r\n                    required={true}\r\n                    defaultValue={!props.defaultData ? \"\" : props.defaultData.password}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button onClick={onCancel} type=\"reset\" >Cancel</button>\r\n                <button type=\"submit\">Save</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ClientForm","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\UI\\button\\AuthButton.js",[],"C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\UI\\CardCoupon.js",["179"],"import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport classes from '../components/Coupon/Coupon.module.css';\r\n\r\nconst CardCoupon = (props)=>{\r\n    const userType = useSelector((state) => state.auth.userType);\r\n\r\n      \r\n    return (\r\n      <div className={classes['card-coupon']}>\r\n        <h2>{props.card.title}</h2>\r\n        <h4>{props.card.description}</h4>\r\n        <p>\r\n          <img\r\n            src={props.card.image}\r\n            width=\"60%\" height=\"70%\" />\r\n        </p>\r\n        <h3>{props.card.price}₪</h3>\r\n        <h4 >Coupon available: </h4>\r\n        <h4 >{props.card.startDate} - {props.card.endDate}</h4>\r\n        <h4>Category: {props.card.category}</h4>\r\n        <p>\r\n          {userType === \"company\" &&\r\n            <h4>Amount of coupon last: {props.card.amount}</h4>}\r\n        </p>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default CardCoupon;","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\UpdateCoupon.js",["180","181","182","183","184","185","186","187","188","189"],"import React, { useCallback, useRef, useState } from 'react';\r\nimport Select from \"react-select\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport classes from './Coupon.module.css';\r\nimport fetchWrapper from '../../helper/fetchWrapper'\r\n\r\nconst UpdateCoupon = (props) => {\r\n\r\n    const token = useSelector((state) => state.auth.token);\r\n    const userType = useSelector((state) => state.auth.userType);\r\n  \r\n    const titleRef = useRef(\"\");\r\n    const descriptionRef = useRef(\"\");\r\n    const releaseDateRef = useRef(\"\");\r\n    const [releaseDateState, setRelealseDate] = useState(props.coupon.startDate);\r\n    const expiredDateRef = useRef(\"\");\r\n    const categoryRef = useRef(\"\");\r\n    const amountRef = useRef(\"\");\r\n    const priceRef = useRef(\"\");\r\n    const imageRef = useRef(\"\");\r\n    const [imageLoadState, setImageLoad] = useState(\"\");\r\n\r\n    const categories = [\r\n        { value: \"food\", label: \"Food\" },\r\n        { value: \"electricity\", label: \"Electricity\" },\r\n        { value: \"restaurant\", label: \"Restaurant\" },\r\n        { value: \"vacation\", label: \"Vacation\" },\r\n    ];\r\n\r\n    const onSubmitHandler = useCallback(async (event) => {\r\n        event.preventDefault();\r\n\r\n        const couponToSend = {\r\n            id: props.coupon.id,\r\n            title: titleRef.current.value == \"\" ? props.coupon.title : titleRef.current.value,\r\n            description: descriptionRef.current.value == \"\" ? props.coupon.description : titleRef.current.value,\r\n            category: categoryRef.current.state.selectValue[0].label,\r\n            startDate: releaseDateRef.current.value,\r\n            endDate: expiredDateRef.current.value,\r\n            amount: amountRef.current.value == \"\" ? props.coupon.amount : amountRef.current.value,\r\n            price: priceRef.current.value == \"\" ? props.coupon.price : priceRef.current.value,\r\n            image: props.coupon.image,\r\n        };\r\n        console.log(couponToSend);\r\n\r\n        const method = \"PUT\";\r\n        const path = \"/\"+userType+\"/update\";\r\n        try {\r\n            const data = await fetchWrapper.fetch(method, path, couponToSend, token, () => {\r\n                console.log(\"error\");\r\n            })\r\n            console.log(couponToSend);\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    }, []);\r\n\r\n    const onCancel = () => {\r\n        if (window.confirm(\"Are you sure you want to cancel?\")) {\r\n            props.onCancel();\r\n        }\r\n    }\r\n    return (\r\n        <div className={classes.coupon}  >\r\n            <form onSubmit={onSubmitHandler}>\r\n                <input\r\n                    id=\"title\"\r\n                    type=\"text\"\r\n                    ref={titleRef}\r\n                    defaultValue={props.coupon.title} />\r\n                \r\n                <textarea\r\n                    id=\"description\"\r\n                    rows=\"2\"\r\n                    ref={descriptionRef}\r\n                    defaultValue={props.coupon.description} />\r\n                \r\n                <p>\r\n                    <img\r\n                        src={props.coupon.image}\r\n                        width=\"60%\" height=\"70%\" />\r\n                </p>\r\n                \r\n                <input id=\"price\" type=\"number\"\r\n                    min=\"1\"\r\n                    step=\"0.01\"\r\n                    ref={priceRef}\r\n                    defaultValue={props.coupon.price} />\r\n                <label htmlFor='price'>₪</label>\r\n                \r\n                <label >Coupon available date:</label>\r\n                <input id=\"releaseDate\"\r\n                    type=\"date\"\r\n                    min={props.coupon.startDate}\r\n                    ref={releaseDateRef}\r\n                    onChange={e => setRelealseDate(e.target.value)}\r\n                    defaultValue={props.coupon.startDate} />\r\n                \r\n                <label >Coupon expired date:</label>\r\n                <input id=\"expiredDate\"\r\n                    type=\"date\"\r\n                    min={releaseDateState}\r\n                    ref={expiredDateRef}\r\n                    defaultValue={props.coupon.endDate} />\r\n                \r\n                <label>Category:</label><Select\r\n                    id=\"select\"\r\n                    className=\"coupon__select\"\r\n                    options={categories}\r\n                    ref={categoryRef}\r\n                    defaultValue={categories.find(obj => obj.label === props.coupon.category)} />\r\n                <label>Amount of coupon last:</label>\r\n                <input type=\"number\"\r\n                    min=\"1\"\r\n                    step=\"1\"\r\n                    id=\"amount\"\r\n                    ref={amountRef}\r\n                    defaultValue={props.coupon.amount} />\r\n                <button onClick={onCancel} >Cancel</button>\r\n                <button>Save</button>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UpdateCoupon;\r\n","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\components\\Client\\Client.js",["190","191","192"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport fetchWrapper from '../../helper/fetchWrapper'\r\n\r\nimport classes from \"./Client.module.css\"\r\nimport CardClient from \"../../UI/CardClient\"\r\nimport ClientForm from \"./ClientForm\";\r\n\r\nconst Client = (props) => {\r\n  \r\n  const userType = useSelector(state => state.auth.userType);\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  const [currClient,setCurrClient]= useState(props);\r\n  const [error, setError] = useState(null);\r\n  const [isAvailClient, setAvailClient] = useState(true);\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  let content = <div>cant show user details</div>\r\n    \r\n  content = <CardClient client={currClient} />\r\n     \r\n\r\n  const deleteClient = useCallback(async (event) => {\r\n    event.preventDefault();\r\n    setError(null);\r\n    let method = \"DELETE\";\r\n    let path = \"admin/delete/\" + currClient.clientType + \"/\" + currClient.id;\r\n    try {\r\n        const data = await fetchWrapper.delete(method, path, token, () => {})\r\n        setAvailClient(false);\r\n     \r\n    }catch (error) {\r\n      console.log(error.message);\r\n      setError(error.message);\r\n  }\r\n  }, []);\r\n\r\n  const deleteChangeHandler = (event) => {\r\n    if (window.confirm(\"are you sure you want to delete this client?\")) {\r\n      deleteClient(event);\r\n    }\r\n  }\r\n\r\n  const updateClientChangeHandler = () => {\r\n    setEdit(true);\r\n  }\r\n\r\n  const onCancel = () => {\r\n    setEdit(false);\r\n\r\n  }\r\n  const onSave = (props) => {\r\n    setEdit(false);\r\n    setCurrClient(props);\r\n  }\r\n\r\n  if (edit) {\r\n    content = <ClientForm defaultData={currClient} requestClient={currClient.clientType} onCancel={onCancel} onSave={onSave} />\r\n  \r\n  }\r\n  \r\n  if (error){\r\n    <section>\r\n      {error}\r\n    </section>\r\n  }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      {isAvailClient && \r\n      <div className={classes.client}>\r\n        {content}\r\n        {userType === \"admin\" && !edit && <button onClick={updateClientChangeHandler}>update</button>}\r\n        {userType === \"admin\" && !edit && <button onClick={deleteChangeHandler}>delete</button>}\r\n      </div>}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Client; ","C:\\Users\\bar86\\Documents\\GitHub\\CouponSystemFinal\\CouponSystemSpring\\src\\main\\react\\src\\UI\\CardClient.js",[],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":1,"column":31,"nodeType":"199","messageId":"200","endLine":1,"endColumn":39},{"ruleId":"201","severity":1,"message":"202","line":33,"column":6,"nodeType":"203","endLine":33,"endColumn":14,"suggestions":"204"},{"ruleId":"197","severity":1,"message":"198","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":25},{"ruleId":"197","severity":1,"message":"205","line":1,"column":27,"nodeType":"199","messageId":"200","endLine":1,"endColumn":36},{"ruleId":"197","severity":1,"message":"206","line":1,"column":38,"nodeType":"199","messageId":"200","endLine":1,"endColumn":49},{"ruleId":"197","severity":1,"message":"207","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":21},{"ruleId":"197","severity":1,"message":"208","line":8,"column":10,"nodeType":"199","messageId":"200","endLine":8,"endColumn":19},{"ruleId":"201","severity":1,"message":"209","line":43,"column":6,"nodeType":"203","endLine":43,"endColumn":8,"suggestions":"210"},{"ruleId":"201","severity":1,"message":"211","line":50,"column":6,"nodeType":"203","endLine":50,"endColumn":8,"suggestions":"212"},{"ruleId":"213","severity":1,"message":"214","line":28,"column":30,"nodeType":"215","messageId":"216","endLine":28,"endColumn":32},{"ruleId":"197","severity":1,"message":"206","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":28},{"ruleId":"197","severity":1,"message":"205","line":1,"column":30,"nodeType":"199","messageId":"200","endLine":1,"endColumn":39},{"ruleId":"197","severity":1,"message":"198","line":1,"column":41,"nodeType":"199","messageId":"200","endLine":1,"endColumn":49},{"ruleId":"197","severity":1,"message":"207","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":21},{"ruleId":"197","severity":1,"message":"217","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":21},{"ruleId":"213","severity":1,"message":"214","line":24,"column":25,"nodeType":"215","messageId":"216","endLine":24,"endColumn":27},{"ruleId":"201","severity":1,"message":"218","line":51,"column":6,"nodeType":"203","endLine":51,"endColumn":8,"suggestions":"219"},{"ruleId":"201","severity":1,"message":"211","line":55,"column":6,"nodeType":"203","endLine":55,"endColumn":8,"suggestions":"220"},{"ruleId":"197","severity":1,"message":"221","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":25},{"ruleId":"197","severity":1,"message":"222","line":53,"column":13,"nodeType":"199","messageId":"200","endLine":53,"endColumn":17},{"ruleId":"201","severity":1,"message":"223","line":61,"column":6,"nodeType":"203","endLine":61,"endColumn":8,"suggestions":"224"},{"ruleId":"197","severity":1,"message":"217","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":21},{"ruleId":"197","severity":1,"message":"225","line":6,"column":8,"nodeType":"199","messageId":"200","endLine":6,"endColumn":15},{"ruleId":"201","severity":1,"message":"226","line":19,"column":32,"nodeType":"199","endLine":19,"endColumn":43},{"ruleId":"213","severity":1,"message":"227","line":31,"column":51,"nodeType":"215","messageId":"216","endLine":31,"endColumn":53},{"ruleId":"213","severity":1,"message":"227","line":33,"column":45,"nodeType":"215","messageId":"216","endLine":33,"endColumn":47},{"ruleId":"213","severity":1,"message":"227","line":34,"column":50,"nodeType":"215","messageId":"216","endLine":34,"endColumn":52},{"ruleId":"213","severity":1,"message":"227","line":35,"column":49,"nodeType":"215","messageId":"216","endLine":35,"endColumn":51},{"ruleId":"213","severity":1,"message":"227","line":45,"column":51,"nodeType":"215","messageId":"216","endLine":45,"endColumn":53},{"ruleId":"213","severity":1,"message":"227","line":47,"column":45,"nodeType":"215","messageId":"216","endLine":47,"endColumn":47},{"ruleId":"213","severity":1,"message":"227","line":48,"column":50,"nodeType":"215","messageId":"216","endLine":48,"endColumn":52},{"ruleId":"213","severity":1,"message":"227","line":49,"column":49,"nodeType":"215","messageId":"216","endLine":49,"endColumn":51},{"ruleId":"201","severity":1,"message":"228","line":67,"column":8,"nodeType":"203","endLine":67,"endColumn":10,"suggestions":"229"},{"ruleId":"197","severity":1,"message":"217","line":1,"column":10,"nodeType":"199","messageId":"200","endLine":1,"endColumn":21},{"ruleId":"197","severity":1,"message":"230","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":21},{"ruleId":"197","severity":1,"message":"231","line":3,"column":10,"nodeType":"199","messageId":"200","endLine":3,"endColumn":18},{"ruleId":"197","severity":1,"message":"232","line":17,"column":7,"nodeType":"199","messageId":"200","endLine":17,"endColumn":9},{"ruleId":"197","severity":1,"message":"233","line":19,"column":7,"nodeType":"199","messageId":"200","endLine":19,"endColumn":16},{"ruleId":"197","severity":1,"message":"234","line":21,"column":7,"nodeType":"199","messageId":"200","endLine":21,"endColumn":25},{"ruleId":"201","severity":1,"message":"235","line":122,"column":9,"nodeType":"203","endLine":122,"endColumn":61,"suggestions":"236"},{"ruleId":"197","severity":1,"message":"237","line":1,"column":16,"nodeType":"199","messageId":"200","endLine":1,"endColumn":26},{"ruleId":"213","severity":1,"message":"214","line":20,"column":55,"nodeType":"215","messageId":"216","endLine":20,"endColumn":57},{"ruleId":"213","severity":1,"message":"214","line":27,"column":34,"nodeType":"215","messageId":"216","endLine":27,"endColumn":36},{"ruleId":"197","severity":1,"message":"222","line":36,"column":13,"nodeType":"199","messageId":"200","endLine":36,"endColumn":17},{"ruleId":"201","severity":1,"message":"238","line":43,"column":6,"nodeType":"203","endLine":43,"endColumn":8,"suggestions":"239"},{"ruleId":"197","severity":1,"message":"222","line":100,"column":19,"nodeType":"199","messageId":"200","endLine":100,"endColumn":23},{"ruleId":"201","severity":1,"message":"240","line":106,"column":6,"nodeType":"203","endLine":106,"endColumn":8,"suggestions":"241"},{"ruleId":"213","severity":1,"message":"214","line":113,"column":18,"nodeType":"215","messageId":"216","endLine":113,"endColumn":20},{"ruleId":"213","severity":1,"message":"214","line":115,"column":18,"nodeType":"215","messageId":"216","endLine":115,"endColumn":20},{"ruleId":"201","severity":1,"message":"226","line":19,"column":27,"nodeType":"199","endLine":19,"endColumn":38},{"ruleId":"197","severity":1,"message":"222","line":52,"column":19,"nodeType":"199","messageId":"200","endLine":52,"endColumn":23},{"ruleId":"242","severity":1,"message":"243","line":15,"column":11,"nodeType":"244","endLine":17,"endColumn":40},{"ruleId":"197","severity":1,"message":"245","line":21,"column":11,"nodeType":"199","messageId":"200","endLine":21,"endColumn":19},{"ruleId":"197","severity":1,"message":"246","line":22,"column":12,"nodeType":"199","messageId":"200","endLine":22,"endColumn":26},{"ruleId":"197","severity":1,"message":"247","line":22,"column":28,"nodeType":"199","messageId":"200","endLine":22,"endColumn":40},{"ruleId":"213","severity":1,"message":"227","line":36,"column":43,"nodeType":"215","messageId":"216","endLine":36,"endColumn":45},{"ruleId":"213","severity":1,"message":"227","line":37,"column":55,"nodeType":"215","messageId":"216","endLine":37,"endColumn":57},{"ruleId":"213","severity":1,"message":"227","line":41,"column":45,"nodeType":"215","messageId":"216","endLine":41,"endColumn":47},{"ruleId":"213","severity":1,"message":"227","line":42,"column":43,"nodeType":"215","messageId":"216","endLine":42,"endColumn":45},{"ruleId":"197","severity":1,"message":"222","line":50,"column":19,"nodeType":"199","messageId":"200","endLine":50,"endColumn":23},{"ruleId":"201","severity":1,"message":"248","line":57,"column":8,"nodeType":"203","endLine":57,"endColumn":10,"suggestions":"249"},{"ruleId":"242","severity":1,"message":"243","line":80,"column":21,"nodeType":"244","endLine":82,"endColumn":52},{"ruleId":"197","severity":1,"message":"205","line":1,"column":30,"nodeType":"199","messageId":"200","endLine":1,"endColumn":39},{"ruleId":"197","severity":1,"message":"222","line":30,"column":15,"nodeType":"199","messageId":"200","endLine":30,"endColumn":19},{"ruleId":"201","severity":1,"message":"250","line":37,"column":6,"nodeType":"203","endLine":37,"endColumn":8,"suggestions":"251"},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["254"],"'useEffect' is defined but never used.","'useCallback' is defined but never used.","'useSelector' is defined but never used.","'isLoading' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'error'. Either include it or remove the dependency array.",["255"],"React Hook useEffect has a missing dependency: 'fetchCouponsHandler'. Either include it or remove the dependency array.",["256"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useDispatch' is defined but never used.","React Hook useCallback has missing dependencies: 'token' and 'userType'. Either include them or remove the dependency array.",["257"],["258"],"'Fragment' is defined but never used.","'data' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'releaseDateState', 'token', and 'userType'. Either include them or remove the dependency array.",["259"],"'classes' is defined but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'fetchClientHandler'. Either include it or remove the dependency array.",["260"],"'authActions' is defined but never used.","'Redirect' is defined but never used.","'OK' is assigned a value but never used.","'NOT_FOUND' is assigned a value but never used.","'METHOD_NOT_ALLOWED' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["261"],"'useReducer' is defined but never used.","React Hook useCallback has missing dependencies: 'id' and 'token'. Either include them or remove the dependency array.",["262"],"React Hook useCallback has missing dependencies: 'coupon', 'token', and 'userType'. Either include them or remove the dependency array.",["263"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'imageRef' is assigned a value but never used.","'imageLoadState' is assigned a value but never used.","'setImageLoad' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'props.coupon.amount', 'props.coupon.description', 'props.coupon.id', 'props.coupon.image', 'props.coupon.price', 'props.coupon.title', 'token', and 'userType'. Either include them or remove the dependency array.",["264"],"React Hook useCallback has missing dependencies: 'currClient.clientType', 'currClient.id', and 'token'. Either include them or remove the dependency array.",["265"],"no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"270","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},"Update the dependencies array to be: [dispatch, logout]",{"range":"289","text":"290"},"Update the dependencies array to be: [error]",{"range":"291","text":"292"},"Update the dependencies array to be: [fetchCouponsHandler]",{"range":"293","text":"294"},"Update the dependencies array to be: [token, userType]",{"range":"295","text":"296"},{"range":"297","text":"294"},"Update the dependencies array to be: [releaseDateState, token, userType]",{"range":"298","text":"299"},"Update the dependencies array to be: [fetchClientHandler]",{"range":"300","text":"301"},"Update the dependencies array to be: [emailState.value, passwordState.value, userTypeState.value, dispatch, history]",{"range":"302","text":"303"},"Update the dependencies array to be: [id, token]",{"range":"304","text":"305"},"Update the dependencies array to be: [coupon, token, userType]",{"range":"306","text":"307"},"Update the dependencies array to be: [props.coupon.amount, props.coupon.description, props.coupon.id, props.coupon.image, props.coupon.price, props.coupon.title, token, userType]",{"range":"308","text":"309"},"Update the dependencies array to be: [currClient.clientType, currClient.id, token]",{"range":"310","text":"311"},[1361,1369],"[dispatch, logout]",[1248,1250],"[error]",[1374,1376],"[fetchCouponsHandler]",[1705,1707],"[token, userType]",[1785,1787],[2004,2006],"[releaseDateState, token, userType]",[2682,2684],"[fetchClientHandler]",[3536,3588],"[emailState.value, passwordState.value, userTypeState.value, dispatch, history]",[1243,1245],"[id, token]",[2883,2885],"[coupon, token, userType]",[2294,2296],"[props.coupon.amount, props.coupon.description, props.coupon.id, props.coupon.image, props.coupon.price, props.coupon.title, token, userType]",[1212,1214],"[currClient.clientType, currClient.id, token]"]