[{"C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\index.js":"1","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\App.js":"2","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\store\\index.js":"3","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\store\\auth.js":"4","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\pages\\CustomerDashboard.js":"5","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Header.js":"6","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\pages\\Welcome.js":"7","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\pages\\Customers.js":"8","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\pages\\CompanyDashboard.js":"9","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\pages\\AddCouponForm.js":"10","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\pages\\Companies.js":"11","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Client\\Client.js":"12","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\CouponList.js":"13","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\CouponFetch.js":"14","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\CreateCoupon.js":"15","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Client\\ClientFetch.js":"16","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Client\\ClientForm.js":"17","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\helper\\fetchWrapper.js":"18","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\UI\\card\\Card.js":"19","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\UI\\button\\AuthButton.js":"20","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\UI\\CardClient.js":"21","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\Coupon.js":"22","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\CouponsFilter.js":"23","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Client\\ClientList.js":"24","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\UI\\CardCoupon.js":"25","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\UpdateCoupon.js":"26","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\pages\\LoginPage.js":"27","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\login\\Auth.js":"28"},{"size":407,"mtime":1644086874582,"results":"29","hashOfConfig":"30"},{"size":2478,"mtime":1644053673403,"results":"31","hashOfConfig":"30"},{"size":191,"mtime":1643821068752,"results":"32","hashOfConfig":"30"},{"size":1048,"mtime":1643740597920,"results":"33","hashOfConfig":"30"},{"size":485,"mtime":1643820013522,"results":"34","hashOfConfig":"30"},{"size":1960,"mtime":1643739126481,"results":"35","hashOfConfig":"30"},{"size":1600,"mtime":1644053673411,"results":"36","hashOfConfig":"30"},{"size":216,"mtime":1643655822861,"results":"37","hashOfConfig":"30"},{"size":486,"mtime":1643821147571,"results":"38","hashOfConfig":"30"},{"size":348,"mtime":1643655822830,"results":"39","hashOfConfig":"30"},{"size":280,"mtime":1644053673410,"results":"40","hashOfConfig":"30"},{"size":2214,"mtime":1643820352444,"results":"41","hashOfConfig":"30"},{"size":669,"mtime":1643655822729,"results":"42","hashOfConfig":"30"},{"size":2714,"mtime":1643820578797,"results":"43","hashOfConfig":"30"},{"size":4666,"mtime":1643813621151,"results":"44","hashOfConfig":"30"},{"size":3491,"mtime":1643819936932,"results":"45","hashOfConfig":"30"},{"size":4525,"mtime":1643814668446,"results":"46","hashOfConfig":"30"},{"size":2373,"mtime":1644053673408,"results":"47","hashOfConfig":"30"},{"size":245,"mtime":1643801487913,"results":"48","hashOfConfig":"30"},{"size":400,"mtime":1643801487911,"results":"49","hashOfConfig":"30"},{"size":910,"mtime":1643655822643,"results":"50","hashOfConfig":"30"},{"size":3396,"mtime":1644087716553,"results":"51","hashOfConfig":"30"},{"size":2090,"mtime":1643655822739,"results":"52","hashOfConfig":"30"},{"size":560,"mtime":1643803680932,"results":"53","hashOfConfig":"30"},{"size":885,"mtime":1643802438864,"results":"54","hashOfConfig":"30"},{"size":4913,"mtime":1644087846624,"results":"55","hashOfConfig":"30"},{"size":166,"mtime":1643821506463,"results":"56","hashOfConfig":"30"},{"size":4386,"mtime":1644086050848,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gmybuc",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"63"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"63"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"63"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"63"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"63"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\index.js",[],"C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\App.js",["128","129"],"import { Fragment, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Header from './components/Header';\r\nimport CompanyDashboard from './pages/CompanyDashboard';\r\nimport CustomerDashboard from './pages/CustomerDashboard'\r\nimport Welcome from './pages/Welcome'\r\nimport LoginPage from './pages/LoginPage';\r\nimport AddCouponForm from './pages/AddCouponForm';\r\nimport Companies from './pages/Companies';\r\nimport Customers from './pages/Customers';\r\nimport { authActions } from \"./store/auth\"\r\n\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n  const isAuth = useSelector(state => state.auth.isAuthenticated);\r\n  const userType = useSelector(state => state.auth.userType);\r\n  const logout = localStorage.getItem('isLoggedIn');\r\n  useEffect(() => {\r\n    const storedUser_LoggedIn_Information = localStorage.getItem('isLoggedIn');\r\n    const storedUser_Token_Information = localStorage.getItem('token');\r\n    const storedUser_UserType_Information = localStorage.getItem('userType');\r\n    if (storedUser_LoggedIn_Information === \"true\") {\r\n      dispatch(authActions.login(storedUser_Token_Information));\r\n      dispatch(authActions.userTypeHandler(storedUser_UserType_Information));\r\n    }\r\n    else {\r\n      dispatch(authActions.logout());\r\n    }\r\n  }, [logout]);\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n\r\n      <Switch>\r\n\r\n        <Route path=\"/\" exact>\r\n          {!isAuth && <LoginPage />}\r\n          {isAuth && <Welcome />}\r\n        </Route>\r\n\r\n        <Route path=\"/login\" exact>\r\n          <LoginPage />\r\n        </Route>\r\n\r\n        <Route path=\"/HomePage\" exact>\r\n          <Welcome />\r\n        </Route>\r\n\r\n        {userType === \"admin\" && <Route path=\"/companies\" exact>\r\n          <Companies />\r\n        </Route>}\r\n\r\n        {userType === \"admin\" && <Route path=\"/customers\" exact>\r\n          <Customers />\r\n        </Route>}\r\n\r\n        {userType === \"company\" && <Route path=\"/addCoupon\" exact>\r\n          <AddCouponForm />\r\n        </Route>}\r\n\r\n        <Route path=\"/dashboard\" exact>\r\n          {!isAuth && <Welcome />}\r\n          {userType === \"company\" && <CompanyDashboard />}\r\n          {userType === \"customer\" && <CustomerDashboard />}\r\n          {userType === \"admin\" && <Welcome />}\r\n        </Route>\r\n\r\n        <Route path=\"/\">\r\n          <Welcome />\r\n        </Route>\r\n      </Switch>\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;",["130","131"],"C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\store\\index.js",[],"C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\store\\auth.js",[],"C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\pages\\CustomerDashboard.js",["132","133","134","135"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ClientFetch from \"../components/Client/ClientFetch\";\r\n\r\nimport CouponFetch from '../components/Coupon/CouponFetch'\r\n\r\n\r\nfunction CompanyDashboard() {\r\n  \r\n    return(\r\n        <React.Fragment>\r\n          <ClientFetch requestClient=\"customer\"/>\r\n            \r\n            <CouponFetch/>\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default CompanyDashboard;","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Header.js",["136"],"import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport classes from './Header.module.css';\r\nimport { authActions } from '../store/auth';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const isAuth = useSelector((state) => state.auth.isAuthenticated);\r\n  const userType = useSelector(state => state.auth.userType);\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(authActions.logout());\r\n  };\r\n\r\n  return (\r\n    <header className={classes.header}>\r\n      <h1>Coupon System</h1>\r\n      <nav>\r\n        <ul>\r\n\r\n          <li>\r\n            <NavLink activeClassName={classes.active} to=\"/HomePage\">\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n\r\n          {isAuth && userType!=\"admin\" &&\r\n          <li>\r\n            <NavLink activeClassName={classes.active} to=\"/dashboard\">\r\n              Dashboard\r\n            </NavLink>\r\n          </li>}\r\n\r\n          {userType === \"company\" &&\r\n            <li>\r\n              <NavLink activeClassName={classes.active} to=\"/addCoupon\">\r\n                Add Coupon\r\n              </NavLink>\r\n            </li>}\r\n\r\n            {userType === \"admin\" &&\r\n            <li>\r\n              <NavLink activeClassName={classes.active} to=\"/companies\">\r\n                Companies\r\n              </NavLink>\r\n            </li>}\r\n\r\n            {userType === \"admin\" &&\r\n            <li>\r\n              <NavLink activeClassName={classes.active} to=\"/customers\">\r\n                Customers\r\n              </NavLink>\r\n            </li>}\r\n\r\n          {!isAuth && \r\n          <li>\r\n            <NavLink activeClassName={classes.active} className={classes.loginButton} to=\"/\">\r\n            Login\r\n          </NavLink>\r\n          </li>}\r\n\r\n          {isAuth && (\r\n            <li>\r\n              <button onClick={logoutHandler}>Logout</button>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\pages\\Welcome.js",["137","138","139"],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport CouponList from '../components/Coupon/CouponList';\r\nimport fetchWrapper from '../helper/fetchWrapper'\r\n\r\nconst Welcome = () => {\r\n\r\n  const [coupons, setCoupons] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  let content;\r\n\r\n  const fetchCouponsHandler = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const data = await fetchWrapper.get(\"/api/all\", () => {\r\n        console.log(error)\r\n      });\r\n\r\n      console.log(data);\r\n      console.log(\"Response Okay!\");\r\n\r\n      const transformedCoupons = data.map((couponData) => {\r\n        return {\r\n          id: couponData.id,\r\n          title: couponData.title,\r\n          category: couponData.category,\r\n          description: couponData.description,\r\n          startDate: couponData.startDate,\r\n          endDate: couponData.endDate,\r\n          amount: couponData.amount,\r\n          price: couponData.price,\r\n          image: couponData.image\r\n        };\r\n      });\r\n      setCoupons(transformedCoupons)\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      setError(error.message);\r\n    }\r\n\r\n  }, []);\r\n\r\n  if (error) {\r\n    content = <section>{error}</section>;\r\n  }\r\n  useEffect(() => {\r\n    fetchCouponsHandler();\r\n  }, []);\r\n\r\n\r\n  if (coupons.length > 0) {\r\n    content = <CouponList coupons={coupons} view={\"home\"} />;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {content}\r\n    </React.Fragment>\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\pages\\Customers.js",[],"C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\pages\\CompanyDashboard.js",["140","141","142","143"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport CouponFetch from '../components/Coupon/CouponFetch'\r\nimport ClientFetch from \"../components/Client/ClientFetch\";\r\n\r\nfunction CompanyDashboard() {\r\n \r\n  return (\r\n    <React.Fragment>\r\n      <div >\r\n        <ClientFetch requestClient=\"company\"/>\r\n      </div>\r\n      \r\n      <CouponFetch />\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CompanyDashboard;\r\n","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\pages\\AddCouponForm.js",[],"C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\pages\\Companies.js",[],"C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Client\\Client.js",["144","145","146"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport fetchWrapper from '../../helper/fetchWrapper'\r\n\r\nimport classes from \"./Client.module.css\"\r\nimport CardClient from \"../../UI/CardClient\"\r\nimport ClientForm from \"./ClientForm\";\r\n\r\nconst Client = (props) => {\r\n  \r\n  const userType = useSelector(state => state.auth.userType);\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  const [currClient,setCurrClient]= useState(props);\r\n  const [error, setError] = useState(null);\r\n  const [isAvailClient, setAvailClient] = useState(true);\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  let content = <div>cant show user details</div>\r\n    \r\n  content = <CardClient client={currClient} />\r\n     \r\n\r\n  const deleteClient = useCallback(async (event) => {\r\n    event.preventDefault();\r\n    setError(null);\r\n    let method = \"DELETE\";\r\n    let path = \"admin/delete/\" + currClient.clientType + \"/\" + currClient.id;\r\n    try {\r\n        const data = await fetchWrapper.delete(method, path, token, () => {})\r\n        setAvailClient(false);\r\n     \r\n    }catch (error) {\r\n      console.log(error.message);\r\n      setError(error.message);\r\n  }\r\n  }, []);\r\n\r\n  const deleteChangeHandler = (event) => {\r\n    if (window.confirm(\"are you sure you want to delete this client?\")) {\r\n      deleteClient(event);\r\n    }\r\n  }\r\n\r\n  const updateClientChangeHandler = () => {\r\n    setEdit(true);\r\n  }\r\n\r\n  const onCancel = () => {\r\n    setEdit(false);\r\n\r\n  }\r\n  const onSave = (props) => {\r\n    setEdit(false);\r\n    setCurrClient(props);\r\n  }\r\n\r\n  if (edit) {\r\n    content = <ClientForm defaultData={currClient} requestClient={currClient.clientType} onCancel={onCancel} onSave={onSave} />\r\n  \r\n  }\r\n  \r\n  if (error){\r\n    <section>\r\n      {error}\r\n    </section>\r\n  }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      {isAvailClient && \r\n      <div className={classes.client}>\r\n        {content}\r\n        {userType === \"admin\" && !edit && <button onClick={updateClientChangeHandler}>update</button>}\r\n        {userType === \"admin\" && !edit && <button onClick={deleteChangeHandler}>delete</button>}\r\n      </div>}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Client; ","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\CouponList.js",[],"C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\CouponFetch.js",["147","148","149","150"],"import React, { useState, useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport fetchWrapper from '../../helper/fetchWrapper'\r\nimport CouponList from './CouponList'\r\nimport CouponsFilter from './CouponsFilter'\r\n\r\nconst CouponFetch = () => {\r\n\r\n  const userType = useSelector(state => state.auth.userType);\r\n  const token = useSelector(state => state.auth.token);\r\n\r\n  const [coupons, setCoupons] = useState([]);\r\n  const [isCouponsFetch, setIsCouponsFetch] = useState(false);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchCouponsHandler = useCallback(async (event) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    let data;\r\n    try {\r\n      if ((event.value) != (\"No filter\")) {\r\n        data = await fetchWrapper.get(\"/\" + userType + \"/all\" + event.type + \"/\" + event.value + \"/\" + token)\r\n      }\r\n      else {\r\n        data = await fetchWrapper.get(\"/\" + userType + \"/all/\" + token)\r\n      }\r\n        const transformedCoupons = data.map((couponData) => {\r\n          return {\r\n            id: couponData.id,\r\n            title: couponData.title,\r\n            category: couponData.category,\r\n            description: couponData.description,\r\n            startDate: couponData.startDate,\r\n            endDate: couponData.endDate,\r\n            amount: couponData.amount,\r\n            price: couponData.price,\r\n            image: couponData.image\r\n          };\r\n        });\r\n        setCoupons(transformedCoupons);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      setError(error.message);\r\n\r\n    }\r\n    setIsCouponsFetch(true);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchCouponsHandler({value:'',type:''});\r\n  }, []);\r\n\r\n  let content = <section>Found no coupons.</section>;\r\n\r\n  if (coupons.length > 0) {\r\n    content = <CouponList coupons={coupons} />;\r\n  }\r\n\r\n  if (error) {\r\n    content = <section>{error}</section>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    content = <section>Loading...</section>;\r\n  }\r\n\r\n  if (!isCouponsFetch) {\r\n    content = null;\r\n  }\r\n\r\n  const closeCouponsListHandler = () => {\r\n    setIsCouponsFetch(false);\r\n  }\r\n  const openCouponsListHandler = ()=> {\r\n    fetchCouponsHandler({value:'',type:''});\r\n    setIsCouponsFetch(true);\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      {isCouponsFetch && <button onClick={closeCouponsListHandler} >Close coupons</button>}\r\n      {isCouponsFetch && <CouponsFilter onFilter={fetchCouponsHandler} />}\r\n      {!isCouponsFetch && <button onClick={openCouponsListHandler}>Fetch coupons</button>}\r\n      {content != null && <div>{content}</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CouponFetch;","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\CreateCoupon.js",["151","152","153"],"import React, { Fragment, useCallback, useRef, useState } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\n\r\nimport classes from './CreateCoupon.module.css';\r\nimport fetchWrapper from '../../helper/fetchWrapper'\r\n\r\nfunction CreateCoupon(props) {\r\n\r\n  const token = useSelector((state) => state.auth.token);\r\n  const userType= useSelector ((state) => state.auth.userType);\r\n  const titleRef = useRef(\"\");\r\n  const descriptionRef = useRef(\"\");\r\n  const releaseDateRef= useRef(\"\");\r\n  const [releaseDateState, setRelealseDate] = useState(\"\");\r\n  const expiredDateRef = useRef(\"\");\r\n  const categoryRef = useRef(\"\");\r\n  const amountRef = useRef(\"\");\r\n  const priceRef = useRef(\"\");\r\n  const imageRef = useRef(\"\");\r\n  const [imageLoadState, setImageLoad] = useState(\"\");\r\n\r\n  const categories = [\r\n    { value: \"food\", label: \"Food\" },\r\n    { value: \"electricity\", label: \"Electricity\" },\r\n    { value: \"restaurant\", label: \"Restaurant\" },\r\n    { value: \"vacation\", label: \"Vacation\" },\r\n  ];\r\n\r\n  let required = true;\r\n  const todayDate = new Date().toISOString().substring(0, 10);\r\n\r\n  const submitHandler = useCallback(async (event) => {\r\n    event.preventDefault();\r\n\r\n    const couponToSend = {\r\n      title: titleRef.current.value,\r\n      description: descriptionRef.current.value,\r\n      category: categoryRef.current.state.selectValue[0].label,\r\n      startDate: releaseDateState,\r\n      endDate: expiredDateRef.current.value,\r\n      amount: amountRef.current.value,\r\n      price: priceRef.current.value,\r\n      image: imageRef.current.value,\r\n    };\r\n\r\n    console.log(couponToSend);\r\n    const method = \"POST\";\r\n    const path=\"/\"+userType+\"/add\";\r\n    \r\n    try {\r\n      const data = await fetchWrapper.fetch(method, path, couponToSend, token, () => {\r\n        console.log(\"error\");\r\n    })\r\n    console.log(\"coupon sent to server: \" + couponToSend);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n    //setIsLoading(false);\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <section>\r\n    <form onSubmit={submitHandler} className={classes.control} >\r\n      <div >\r\n        <label htmlFor=\"title\">Title</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"title\"\r\n          ref={titleRef}\r\n          required={required}\r\n        />\r\n      </div>\r\n      <div >\r\n        <label htmlFor=\"description\">Coupon description</label>\r\n        <textarea\r\n          id=\"description\"\r\n          rows=\"3\"\r\n          ref={descriptionRef}\r\n          required={required} />\r\n      </div>\r\n      <div >\r\n        <label htmlFor=\"releaseDate\">Release Date</label>\r\n        <input\r\n          id=\"releaseDate\"\r\n          type=\"date\"\r\n          min={todayDate}\r\n          ref= {releaseDateRef}\r\n          onChange={e => setRelealseDate(e.target.value)}\r\n          required={{ required }} />\r\n      </div>\r\n      <div >\r\n        <label htmlFor=\"expiredDate\">Expired Date</label>\r\n        <input\r\n          id=\"expiredDate\"\r\n          type=\"date\"\r\n          min={releaseDateState}\r\n          ref={expiredDateRef}\r\n          required={required} />\r\n      </div>\r\n      <div >\r\n        <label htmlFor=\"select\">Category</label>\r\n        <Select\r\n          id=\"select\"\r\n          options={categories}\r\n          ref={categoryRef}\r\n          required={required}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"price\">price</label>\r\n        <input\r\n          id=\"price\"\r\n          type=\"number\"\r\n          min=\"1\"\r\n          step=\"0.01\"\r\n          ref={priceRef}\r\n          required={required} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"amount\">Amount of available coupons</label>\r\n        <input\r\n          type=\"number\"\r\n          min=\"1\"\r\n          step=\"1\"\r\n          id=\"amount\"\r\n          ref={amountRef}\r\n          required={required} />\r\n      </div>\r\n      <div >\r\n        <div className={classes['control-image']} onChange={e => setImageLoad(e.target.value)} required={required}>\r\n          <label htmlFor=\"imageLoad\">Image</label>\r\n          <div><input type=\"radio\" value=\"URL\" name=\"imageLoad\" />URL</div>\r\n          <div><input type=\"radio\" value=\"File\" name=\"imageLoad\" />File</div>\r\n        </div>\r\n        {imageLoadState === \"URL\" && <input type=\"url\" id=\"image\" ref={imageRef} required={required} />}\r\n        {imageLoadState === \"File\" && <input type=\"file\" id=\"image\" ref={imageRef} required={required} />}\r\n      </div>\r\n      <button type=\"submit\">Add Coupon</button>\r\n    </form>\r\n    </section>\r\n  );\r\n}\r\n\r\n// {ReactDOM.createPortal(<Popup show={showPopup} popuptext=\"wrong movie details!\"/>\r\n// , document.getElementById(\"popup-place-holder\"))}\r\n\r\nexport default CreateCoupon;\r\n","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Client\\ClientFetch.js",["154","155","156","157","158","159","160","161","162","163","164","165"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport fetchWrapper from '../../helper/fetchWrapper'\r\nimport ClientList from \"./ClientList\";\r\nimport ClientForm from \"./ClientForm\";\r\nimport classes from './ClientList.module.css'\r\n\r\nconst ClientFetch = (props) => {\r\n    const userType = useSelector(state => state.auth.userType);\r\n    const token = useSelector(state => state.auth.token);\r\n\r\n    const [clients, setClients] = useState([]);\r\n    const [add, setAdd] = useState(false);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const requestClient = props.requestClient;\r\n\r\n    const fetchClientHandler = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            const data = await fetchWrapper.get(\"/\" + userType + \"/\" + requestClient + \"/\" + token, () => {\r\n                setError(error.message);\r\n            });\r\n            let transformed ;\r\n            if (userType===\"admin\"){\r\n                console.log(\"admin\")\r\n            transformed = data.map((clientData) => {\r\n                return {\r\n                    clientType: requestClient == \"company\" ? \"company\" : \"customer\",\r\n                    id: clientData.id,\r\n                    name: requestClient == \"company\" ? clientData.name : \"\",\r\n                    firstName: requestClient == \"company\" ? \"\" : clientData.firstName,\r\n                    lastName: requestClient == \"company\" ? \"\" : clientData.lastName,\r\n                    email: clientData.email,\r\n                    password: clientData.password\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            console.log(\"else\")\r\n            transformed=\r\n                 [{\r\n                    clientType: requestClient == \"company\" ? \"company\" : \"customer\",\r\n                    id: data.id,\r\n                    name: requestClient == \"company\" ? data.name : \"\",\r\n                    firstName: requestClient == \"company\" ? \"\" : data.firstName,\r\n                    lastName: requestClient == \"company\" ? \"\" : data.lastName,\r\n                    email: data.email,\r\n                    password: data.password\r\n                }]\r\n        } \r\n        console.log(transformed)\r\n        setClients(transformed)\r\n           \r\n        } catch (error) {\r\n            console.log(error.message);\r\n            setError(error.message);\r\n        }\r\n        setIsLoading(false);\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchClientHandler();\r\n    }, []);\r\n\r\n\r\n    let content = <section>Found no clients.</section>;\r\n\r\n    if (clients.length > 0) {\r\n        content = <ClientList clients={clients} clientType={requestClient} />;\r\n    }\r\n\r\n    if (error) {\r\n        content = <section>{error}</section>;\r\n    }\r\n\r\n    if (isLoading) {\r\n        content = <section>Loading...</section>;\r\n    }\r\n\r\n\r\n    const addClientHandler = () => {\r\n        setAdd(true);\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setAdd(false);\r\n    }\r\n    const onSave = (props) => {\r\n        setAdd(false);\r\n        fetchClientHandler();\r\n    }\r\n    return (\r\n        <div >\r\n            {!add && userType===\"admin\" && <button onClick={addClientHandler}>Add client</button>}\r\n            {add && <ClientForm defaultData={false} requestClient={requestClient} onCancel={onCancel} onSave={onSave} />}\r\n            {content}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ClientFetch;","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Client\\ClientForm.js",["166","167"],"import React, { useCallback, useRef } from \"react\";\r\n\r\nimport classes from './Client.module.css'\r\nimport fetchWrapper from \"../../helper/fetchWrapper\"\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ClientForm = (props) => {\r\n\r\n    const userType = useSelector(state => state.auth.userType);\r\n    const token = useSelector(state => state.auth.token);\r\n\r\n    const requestClient = props.requestClient;\r\n    const emailRef = useRef(\"\");\r\n    const passwordRef = useRef(\"\");\r\n    const nameRef = useRef(\"\");\r\n    const firstNameRef = useRef(\"\");\r\n    const lastNameRef = useRef(\"\");\r\n\r\n    const submitHandler = useCallback(async (event) => {\r\n        event.preventDefault();\r\n        let clientToSend;\r\n        if (requestClient === \"company\") {\r\n            clientToSend = {\r\n                name: nameRef.current.value,\r\n                password: passwordRef.current.value,\r\n                email: emailRef.current.value\r\n            }\r\n        }\r\n        if (requestClient === \"customer\") {\r\n            clientToSend = {\r\n                firstName: firstNameRef.current.value,\r\n                lastName: lastNameRef.current.value,\r\n                password: passwordRef.current.value,\r\n                email: emailRef.current.value,\r\n\r\n            }\r\n\r\n        }\r\n        let method;\r\n        let path;\r\n        if (!props.defaultData) {\r\n            method = \"POST\";\r\n            path = userType + \"/add/\" + requestClient\r\n        }\r\n        else {\r\n            clientToSend = { id: props.defaultData.id, ...clientToSend }\r\n            method = \"PUT\";\r\n            path = userType + \"/update/\" + requestClient\r\n\r\n        }\r\n        try {\r\n            const data = await fetchWrapper.fetch(method, path, clientToSend, token, () => {\r\n                console.log(\"error\");\r\n            })\r\n            clientToSend = { clientType: props.defaultData.clientType, ...clientToSend }\r\n            console.log(clientToSend)\r\n            props.onSave(clientToSend);\r\n            console.log(\"client sent to server: \" + clientToSend);\r\n\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n\r\n    })\r\n\r\n    const onCancel = () => {\r\n        if (window.confirm(\"Are you sure you want to cancel?\")) {\r\n            props.onCancel();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler} className={classes['client-form']}>\r\n            {requestClient === \"company\" && <div >\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                    type=\"name\"\r\n                    id=\"name\"\r\n                    ref={nameRef}\r\n                    required={true}\r\n                    defaultValue={!props.defaultData ? \"\" : props.defaultData.name}\r\n                />\r\n            </div>}\r\n            {requestClient === \"customer\" && <div >\r\n                <label htmlFor=\"firstName\">First name</label>\r\n                <input\r\n                    type=\"firstName\"\r\n                    id=\"firstName\"\r\n                    ref={firstNameRef}\r\n                    required={true}\r\n                    defaultValue={!props.defaultData ? \"\" : props.defaultData.firstName}\r\n                />\r\n            </div>}\r\n            {requestClient === \"customer\" && <div >\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                <input\r\n                    type=\"lastName\"\r\n                    id=\"lastName\"\r\n                    ref={lastNameRef}\r\n                    required={true}\r\n                    defaultValue={!props.defaultData ? \"\" : props.defaultData.lastName}\r\n\r\n                />\r\n            </div>}\r\n\r\n            <div >\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    ref={emailRef}\r\n                    defaultValue={!props.defaultData ? \"\" : props.defaultData.email}\r\n                />\r\n            </div>\r\n            <div >\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    ref={passwordRef}\r\n                    required={true}\r\n                    defaultValue={!props.defaultData ? \"\" : props.defaultData.password}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button onClick={onCancel} type=\"reset\" >Cancel</button>\r\n                <button type=\"submit\">Save</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ClientForm","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\helper\\fetchWrapper.js",["168","169","170","171","172","173"],"import { useDispatch } from \"react-redux\";\r\nimport { authActions } from '../store/auth';\r\nimport { Redirect } from \"react-router-dom\";\r\nconst fetchWrapper = {\r\n  get: async (name) => getHandler(name),\r\n  fetch: async (method, name, dataToSend, onfail) => putHandler(method, name, dataToSend, onfail),\r\n  delete: async (method, name, token, onFail) => deleteHandler(method, name, token, onFail)\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.setItem('isLoggedIn', false);\r\n  window.location.reload(false);\r\n\r\n}\r\n\r\n\r\nconst OK = \"Ok\";\r\n// Custome exception\r\nconst NOT_FOUND = \"Not found\"\r\n// Other exceptions\r\nconst METHOD_NOT_ALLOWED = \"Method not allowed\"\r\n// Session end\r\nconst BAD_REQUEST = \"Bad Request\"\r\n\r\nasync function getHandler(name) {\r\n  const response = await fetch(name);\r\n  console.log(response)\r\n  if (response.statusText === BAD_REQUEST) {\r\n    alert(await response.text());\r\n    logout();\r\n    // throw new Error(response.statusText);\r\n  }\r\n  else if (!response.ok) {\r\n    throw new Error(await response.text());\r\n  }\r\n\r\n  const data = await response.json();\r\n  console.log(\"fetchWrapper got data, len=\" + Object.keys(data).length);\r\n  return data;\r\n\r\n};\r\n\r\nasync function putHandler(method, name, dataToSend, token, onFail = () => { }) {\r\n\r\n  const requestOptions = {\r\n    method: method,\r\n    headers: { \"Content-Type\": \"application/json\", token: token },\r\n    body: JSON.stringify(dataToSend)\r\n  };\r\n  const response = await fetch(name, requestOptions);\r\n  if (response.statusText === BAD_REQUEST) {\r\n    logout();\r\n    alert(await response.text());\r\n    // throw new Error(await response.text());\r\n  }\r\n\r\n  else if (!response.ok) {\r\n    alert(await response.text())\r\n    throw new Error(response.json());\r\n  }\r\n\r\n  alert(await response.text());\r\n  return;\r\n\r\n};\r\n\r\nasync function deleteHandler(method, name, token, onFail = () => { }) {\r\n\r\n  const requestOptions = {\r\n    method: method,\r\n    headers: { \"Content-Type\": \"application/json\", token: token }\r\n  };\r\n  const response = await fetch(name, requestOptions);\r\n  if (response.statusText === BAD_REQUEST) {\r\n    logout();\r\n    alert(await response.text());\r\n    throw new Error(await response.text());\r\n  }\r\n\r\n  else if (!response.ok) {\r\n    alert(await response.text())\r\n    throw new Error(await response.text());\r\n  }\r\n  alert(await response.text());\r\n  return;\r\n\r\n}\r\nexport default fetchWrapper\r\n\r\n","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\UI\\card\\Card.js",[],"C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\UI\\button\\AuthButton.js",[],"C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\UI\\CardClient.js",[],"C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\Coupon.js",["174","175","176","177","178","179"],"C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\CouponsFilter.js",["180","181","182"],"import React, {useReducer, useRef} from 'react';\r\nimport Select from \"react-select\";\r\n\r\nimport classes from './CouponsFilter.module.css'\r\n\r\nconst categories = [\r\n  { value: \"No filter\", label:\"No filter\"},\r\n  { value: \"food\", label: \"Food\" },\r\n  { value: \"Electricity\", label: \"Electricity\" },\r\n  { value: \"restaurant\", label: \"Restaurant\" },\r\n  { value: \"vacation\", label: \"Vacation\" },\r\n];\r\n\r\nconst CouponsFilter = (props) =>\r\n{\r\n  const categoryRef = useRef(\"\");\r\n  const maxPriceRef= useRef(\"\");\r\n\r\n  const filterCategorySubmitHandler =()=>{\r\n    if (categoryRef.current.state.selectValue[0].value!=''){\r\n      maxPriceRef.current.value='';\r\n      props.onFilter({type:\"ByCategory\", value:categoryRef.current.state.selectValue[0].label});\r\n    }\r\n\r\n  }\r\n  const filterMaxPriceSubmitHandler =()=>{\r\n    if (maxPriceRef.current.value!=''){\r\n      categoryRef.current.state.selectValue[0].label='No filter'\r\n      props.onFilter({type:\"ByMaxPrice\", value:maxPriceRef.current.value});\r\n    }\r\n  }\r\n  return (\r\n      \r\n        <div className={classes[\"coupons-filter\"]}>\r\n        <p className={classes[\"coupons-filter-box\"]}>\r\n          <label className=\"coupons-filter__label\" htmlFor='coupons-filter__select'>Filter by category</label>\r\n          <Select className=\"coupons-filter__select\"  \r\n                  id=\"select\"\r\n                  options={categories}\r\n                  ref={categoryRef}\r\n                  >\r\n          </Select>\r\n          <button type=\"submit\" onClick= {filterCategorySubmitHandler} >filter</button>\r\n          </p>\r\n\r\n          <p className={classes[\"coupons-filter-box\"]} >\r\n          <label className=\"coupons-filter__label\" htmlFor=\"maxPrice\">Filter by max price</label>\r\n          <input className=\"coupons-filter__input\" id=\"maxPrice\"\r\n                 type=\"number\"\r\n                 step=\"1\"\r\n                 min=\"1\"\r\n                 ref={maxPriceRef}>\r\n          </input>\r\n          <button type=\"submit\" onClick= {filterMaxPriceSubmitHandler} >filter</button>\r\n          </p>\r\n        </div>\r\n      \r\n  );\r\n\r\n}\r\n\r\nexport default CouponsFilter\r\n\r\n","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Client\\ClientList.js",[],"C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\UI\\CardCoupon.js",["183"],"import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport classes from '../components/Coupon/Coupon.module.css';\r\n\r\nconst CardCoupon = (props)=>{\r\n    const userType = useSelector((state) => state.auth.userType);\r\n\r\n      \r\n    return (\r\n      <div className={classes['card-coupon']}>\r\n        <h2>{props.card.title}</h2>\r\n        <h4>{props.card.description}</h4>\r\n        <p>\r\n          <img\r\n            src={props.card.image}\r\n            width=\"60%\" height=\"70%\" />\r\n        </p>\r\n        <h3>{props.card.price}₪</h3>\r\n        <h4 >Coupon available: </h4>\r\n        <h4 >{props.card.startDate} - {props.card.endDate}</h4>\r\n        <h4>Category: {props.card.category}</h4>\r\n        <p>\r\n          {userType === \"company\" &&\r\n            <h4>Amount of coupon last: {props.card.amount}</h4>}\r\n        </p>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default CardCoupon;","C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\Coupon\\UpdateCoupon.js",["184","185","186","187","188","189","190","191","192","193"],"C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\pages\\LoginPage.js",[],"C:\\Users\\noada\\eclipse-workspace\\CouponSystemSpring\\src\\main\\react\\src\\components\\login\\Auth.js",["194"],{"ruleId":"195","severity":1,"message":"196","line":1,"column":31,"nodeType":"197","messageId":"198","endLine":1,"endColumn":39},{"ruleId":"199","severity":1,"message":"200","line":33,"column":6,"nodeType":"201","endLine":33,"endColumn":14,"suggestions":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"195","severity":1,"message":"207","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":28},{"ruleId":"195","severity":1,"message":"208","line":1,"column":30,"nodeType":"197","messageId":"198","endLine":1,"endColumn":39},{"ruleId":"195","severity":1,"message":"196","line":1,"column":41,"nodeType":"197","messageId":"198","endLine":1,"endColumn":49},{"ruleId":"195","severity":1,"message":"209","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":21},{"ruleId":"210","severity":1,"message":"211","line":28,"column":30,"nodeType":"212","messageId":"213","endLine":28,"endColumn":32},{"ruleId":"195","severity":1,"message":"214","line":8,"column":10,"nodeType":"197","messageId":"198","endLine":8,"endColumn":19},{"ruleId":"199","severity":1,"message":"215","line":43,"column":6,"nodeType":"201","endLine":43,"endColumn":8,"suggestions":"216"},{"ruleId":"199","severity":1,"message":"217","line":50,"column":6,"nodeType":"201","endLine":50,"endColumn":8,"suggestions":"218"},{"ruleId":"195","severity":1,"message":"196","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"208","line":1,"column":27,"nodeType":"197","messageId":"198","endLine":1,"endColumn":36},{"ruleId":"195","severity":1,"message":"207","line":1,"column":38,"nodeType":"197","messageId":"198","endLine":1,"endColumn":49},{"ruleId":"195","severity":1,"message":"209","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":21},{"ruleId":"195","severity":1,"message":"208","line":1,"column":30,"nodeType":"197","messageId":"198","endLine":1,"endColumn":39},{"ruleId":"195","severity":1,"message":"219","line":30,"column":15,"nodeType":"197","messageId":"198","endLine":30,"endColumn":19},{"ruleId":"199","severity":1,"message":"220","line":37,"column":6,"nodeType":"201","endLine":37,"endColumn":8,"suggestions":"221"},{"ruleId":"195","severity":1,"message":"222","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":21},{"ruleId":"210","severity":1,"message":"211","line":24,"column":25,"nodeType":"212","messageId":"213","endLine":24,"endColumn":27},{"ruleId":"199","severity":1,"message":"223","line":51,"column":6,"nodeType":"201","endLine":51,"endColumn":8,"suggestions":"224"},{"ruleId":"199","severity":1,"message":"217","line":55,"column":6,"nodeType":"201","endLine":55,"endColumn":8,"suggestions":"225"},{"ruleId":"195","severity":1,"message":"226","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"219","line":53,"column":13,"nodeType":"197","messageId":"198","endLine":53,"endColumn":17},{"ruleId":"199","severity":1,"message":"227","line":61,"column":6,"nodeType":"201","endLine":61,"endColumn":8,"suggestions":"228"},{"ruleId":"195","severity":1,"message":"222","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":21},{"ruleId":"195","severity":1,"message":"229","line":6,"column":8,"nodeType":"197","messageId":"198","endLine":6,"endColumn":15},{"ruleId":"199","severity":1,"message":"230","line":19,"column":32,"nodeType":"197","endLine":19,"endColumn":43},{"ruleId":"210","severity":1,"message":"231","line":31,"column":47,"nodeType":"212","messageId":"213","endLine":31,"endColumn":49},{"ruleId":"210","severity":1,"message":"231","line":33,"column":41,"nodeType":"212","messageId":"213","endLine":33,"endColumn":43},{"ruleId":"210","severity":1,"message":"231","line":34,"column":46,"nodeType":"212","messageId":"213","endLine":34,"endColumn":48},{"ruleId":"210","severity":1,"message":"231","line":35,"column":45,"nodeType":"212","messageId":"213","endLine":35,"endColumn":47},{"ruleId":"210","severity":1,"message":"231","line":45,"column":47,"nodeType":"212","messageId":"213","endLine":45,"endColumn":49},{"ruleId":"210","severity":1,"message":"231","line":47,"column":41,"nodeType":"212","messageId":"213","endLine":47,"endColumn":43},{"ruleId":"210","severity":1,"message":"231","line":48,"column":46,"nodeType":"212","messageId":"213","endLine":48,"endColumn":48},{"ruleId":"210","severity":1,"message":"231","line":49,"column":45,"nodeType":"212","messageId":"213","endLine":49,"endColumn":47},{"ruleId":"199","severity":1,"message":"232","line":67,"column":8,"nodeType":"201","endLine":67,"endColumn":10,"suggestions":"233"},{"ruleId":"199","severity":1,"message":"230","line":19,"column":27,"nodeType":"197","endLine":19,"endColumn":38},{"ruleId":"195","severity":1,"message":"219","line":52,"column":19,"nodeType":"197","messageId":"198","endLine":52,"endColumn":23},{"ruleId":"195","severity":1,"message":"222","line":1,"column":10,"nodeType":"197","messageId":"198","endLine":1,"endColumn":21},{"ruleId":"195","severity":1,"message":"234","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":21},{"ruleId":"195","severity":1,"message":"235","line":3,"column":10,"nodeType":"197","messageId":"198","endLine":3,"endColumn":18},{"ruleId":"195","severity":1,"message":"236","line":17,"column":7,"nodeType":"197","messageId":"198","endLine":17,"endColumn":9},{"ruleId":"195","severity":1,"message":"237","line":19,"column":7,"nodeType":"197","messageId":"198","endLine":19,"endColumn":16},{"ruleId":"195","severity":1,"message":"238","line":21,"column":7,"nodeType":"197","messageId":"198","endLine":21,"endColumn":25},{"ruleId":"195","severity":1,"message":"219","line":36,"column":13,"nodeType":"197","messageId":"198","endLine":36,"endColumn":17},{"ruleId":"199","severity":1,"message":"239","line":43,"column":6,"nodeType":"201","endLine":43,"endColumn":8,"suggestions":"240"},{"ruleId":"195","severity":1,"message":"219","line":94,"column":19,"nodeType":"197","messageId":"198","endLine":94,"endColumn":23},{"ruleId":"199","severity":1,"message":"241","line":100,"column":6,"nodeType":"201","endLine":100,"endColumn":8,"suggestions":"242"},{"ruleId":"210","severity":1,"message":"211","line":107,"column":18,"nodeType":"212","messageId":"213","endLine":107,"endColumn":20},{"ruleId":"210","severity":1,"message":"211","line":109,"column":18,"nodeType":"212","messageId":"213","endLine":109,"endColumn":20},{"ruleId":"195","severity":1,"message":"243","line":1,"column":16,"nodeType":"197","messageId":"198","endLine":1,"endColumn":26},{"ruleId":"210","severity":1,"message":"211","line":20,"column":55,"nodeType":"212","messageId":"213","endLine":20,"endColumn":57},{"ruleId":"210","severity":1,"message":"211","line":27,"column":34,"nodeType":"212","messageId":"213","endLine":27,"endColumn":36},{"ruleId":"244","severity":1,"message":"245","line":15,"column":11,"nodeType":"246","endLine":17,"endColumn":40},{"ruleId":"195","severity":1,"message":"247","line":21,"column":11,"nodeType":"197","messageId":"198","endLine":21,"endColumn":19},{"ruleId":"195","severity":1,"message":"248","line":22,"column":12,"nodeType":"197","messageId":"198","endLine":22,"endColumn":26},{"ruleId":"195","severity":1,"message":"249","line":22,"column":28,"nodeType":"197","messageId":"198","endLine":22,"endColumn":40},{"ruleId":"210","severity":1,"message":"231","line":36,"column":43,"nodeType":"212","messageId":"213","endLine":36,"endColumn":45},{"ruleId":"210","severity":1,"message":"231","line":37,"column":55,"nodeType":"212","messageId":"213","endLine":37,"endColumn":57},{"ruleId":"210","severity":1,"message":"231","line":41,"column":45,"nodeType":"212","messageId":"213","endLine":41,"endColumn":47},{"ruleId":"210","severity":1,"message":"231","line":42,"column":43,"nodeType":"212","messageId":"213","endLine":42,"endColumn":45},{"ruleId":"195","severity":1,"message":"219","line":50,"column":19,"nodeType":"197","messageId":"198","endLine":50,"endColumn":23},{"ruleId":"199","severity":1,"message":"250","line":58,"column":8,"nodeType":"201","endLine":58,"endColumn":10,"suggestions":"251"},{"ruleId":"244","severity":1,"message":"245","line":81,"column":21,"nodeType":"246","endLine":83,"endColumn":52},{"ruleId":"199","severity":1,"message":"252","line":111,"column":9,"nodeType":"201","endLine":111,"endColumn":61,"suggestions":"253"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["254"],"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"'useCallback' is defined but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'isLoading' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'error'. Either include it or remove the dependency array.",["257"],"React Hook useEffect has a missing dependency: 'fetchCouponsHandler'. Either include it or remove the dependency array.",["258"],"'data' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'currClient.clientType', 'currClient.id', and 'token'. Either include them or remove the dependency array.",["259"],"'useDispatch' is defined but never used.","React Hook useCallback has missing dependencies: 'token' and 'userType'. Either include them or remove the dependency array.",["260"],["261"],"'Fragment' is defined but never used.","React Hook useCallback has missing dependencies: 'releaseDateState', 'token', and 'userType'. Either include them or remove the dependency array.",["262"],"'classes' is defined but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'fetchClientHandler'. Either include it or remove the dependency array.",["263"],"'authActions' is defined but never used.","'Redirect' is defined but never used.","'OK' is assigned a value but never used.","'NOT_FOUND' is assigned a value but never used.","'METHOD_NOT_ALLOWED' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'id' and 'token'. Either include them or remove the dependency array.",["264"],"React Hook useCallback has missing dependencies: 'coupon', 'token', and 'userType'. Either include them or remove the dependency array.",["265"],"'useReducer' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'imageRef' is assigned a value but never used.","'imageLoadState' is assigned a value but never used.","'setImageLoad' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'props', 'token', and 'userType'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["266"],"React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["267"],{"desc":"268","fix":"269"},"no-global-assign","no-unsafe-negation",{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"272","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},"Update the dependencies array to be: [dispatch, logout]",{"range":"291","text":"292"},"Update the dependencies array to be: [error]",{"range":"293","text":"294"},"Update the dependencies array to be: [fetchCouponsHandler]",{"range":"295","text":"296"},"Update the dependencies array to be: [currClient.clientType, currClient.id, token]",{"range":"297","text":"298"},"Update the dependencies array to be: [token, userType]",{"range":"299","text":"300"},{"range":"301","text":"296"},"Update the dependencies array to be: [releaseDateState, token, userType]",{"range":"302","text":"303"},"Update the dependencies array to be: [fetchClientHandler]",{"range":"304","text":"305"},"Update the dependencies array to be: [id, token]",{"range":"306","text":"307"},"Update the dependencies array to be: [coupon, token, userType]",{"range":"308","text":"309"},"Update the dependencies array to be: [props, token, userType]",{"range":"310","text":"311"},"Update the dependencies array to be: [emailState.value, passwordState.value, userTypeState.value, dispatch, history]",{"range":"312","text":"313"},[1361,1369],"[dispatch, logout]",[1248,1250],"[error]",[1374,1376],"[fetchCouponsHandler]",[1212,1214],"[currClient.clientType, currClient.id, token]",[1705,1707],"[token, userType]",[1785,1787],[2004,2006],"[releaseDateState, token, userType]",[2584,2586],"[fetchClientHandler]",[1243,1245],"[id, token]",[2796,2798],"[coupon, token, userType]",[2334,2336],"[props, token, userType]",[3121,3173],"[emailState.value, passwordState.value, userTypeState.value, dispatch, history]"]