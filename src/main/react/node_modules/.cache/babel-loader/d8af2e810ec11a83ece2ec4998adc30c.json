{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noada\\\\eclipse-workspace\\\\CouponSystemSpring\\\\src\\\\main\\\\react\\\\src\\\\components\\\\login\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nimport classes from \"./Auth.module.css\";\nimport { authActions } from \"../../../\";\nimport React, { useCallback, useReducer } from \"react\";\nimport Select from \"react-select\";\nimport AuthButton from \"../UI/button/AuthButton\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.value\n    }; // , isValid: action.val.includes('@') };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value\n    }; //, isValid: state.value.includes('@') };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.value\n    }; //, isValid: action.val.trim().length > 6 };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value\n    }; //, isValid: state.value.trim().length > 6 };\n  }\n\n  return {\n    value: ''\n  }; //, isValid: false };\n};\n\nconst userTypeReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.value\n    }; //, isValid: action.val.trim().length > 6 };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value\n    }; //, isValid: state.value.trim().length > 6 };\n  }\n\n  return {\n    value: ''\n  }; //, isValid: false };\n};\n\nconst Auth = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const options = [{\n    value: \"admin\",\n    label: \"Admin\"\n  }, {\n    value: \"company\",\n    label: \"Company\"\n  }, {\n    value: \"customer\",\n    label: \"Customer\"\n  }];\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      value: event.target.value\n    });\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      value: event.target.value\n    });\n  };\n\n  const userTypeChangeHandler = event => {\n    dispatchUserType({\n      type: 'USER_INPUT',\n      value: event.value\n    });\n  };\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '' //isValid: null,\n\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '' //isValid: null,\n\n  });\n  const [userTypeState, dispatchUserType] = useReducer(userTypeReducer, {\n    value: '' //isValid: null,\n\n  });\n  const submitHandler = useCallback(async event => {\n    try {\n      event.preventDefault();\n      const creds = {\n        email: emailState.value,\n        password: passwordState.value\n      }; // POST request using fetch inside useEffect React hook\n\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(creds)\n      };\n      console.log(\"post: \" + JSON.stringify(creds));\n      const response = await fetch(\"/\" + userTypeState.value + \"/login\", requestOptions);\n\n      if (!response.ok) {\n        window.alert(await response.text());\n        dispatch(authActions.logout());\n        throw new Error(\"Authintication fails!\");\n      }\n\n      console.log(\"Okay!\");\n      const token = await response.text();\n      console.log(\"Got token: \" + token);\n      dispatch(authActions.userTypeHandler(userTypeState.value));\n      dispatch(authActions.login(token));\n      history.push(\"/dashboard\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [emailState, passwordState, userTypeState, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.auth,\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"loginform\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: emailState.value,\n            onChange: emailChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            input: passwordState.value,\n            onChange: passwordChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"select\",\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"select\",\n            options: options,\n            value: options.find(obj => obj.value === userTypeState),\n            onChange: userTypeChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AuthButton, {\n          type: \"submit\",\n          form: \"loginform\",\n          onClick: submitHandler,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"hDOltAv/m3VG9MojMf4Giln/rpI=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/noada/eclipse-workspace/CouponSystemSpring/src/main/react/src/components/login/Auth.js"],"names":["useDispatch","classes","authActions","React","useCallback","useReducer","Select","AuthButton","useHistory","emailReducer","state","action","type","value","isValid","passwordReducer","userTypeReducer","Auth","dispatch","history","options","label","emailChangeHandler","event","dispatchEmail","target","passwordChangeHandler","dispatchPassword","userTypeChangeHandler","dispatchUserType","emailState","passwordState","userTypeState","submitHandler","preventDefault","creds","email","password","requestOptions","method","headers","body","JSON","stringify","console","log","response","fetch","ok","window","alert","text","logout","Error","token","userTypeHandler","login","push","error","message","auth","control","find","obj"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEF,MAAM,CAACE;AAAhB,KAAP,CADgC,CAEhC;AACD;;AACD,MAAIF,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEH,KAAK,CAACG;AAAf,KAAP,CADgC,CAEhC;AACD;;AACD,SAAO;AAAEA,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,OAAO,EAAE;AAAtB,GAAP;AACD,CAVD;;AAYA,MAAMC,eAAe,GAAG,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACzC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEF,MAAM,CAACE;AAAhB,KAAP,CADgC,CAEhC;AACD;;AACD,MAAIF,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEH,KAAK,CAACG;AAAf,KAAP,CADgC,CAEhC;AACD;;AACD,SAAO;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAP,CATyC,CAUzC;AACD,CAXD;;AAcA,MAAMG,eAAe,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACzC,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEF,MAAM,CAACE;AAAhB,KAAP,CADgC,CAEhC;AACD;;AACD,MAAIF,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO;AAAEC,MAAAA,KAAK,EAAEH,KAAK,CAACG;AAAf,KAAP,CADgC,CAEhC;AACD;;AACD,SAAO;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAP,CATyC,CAUzC;AACD,CAXD;;AAcA,MAAMI,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAMmB,OAAO,GAAGX,UAAU,EAA1B;AAEA,QAAMY,OAAO,GAAG,CACd;AAAEP,IAAAA,KAAK,EAAE,OAAT;AAAkBQ,IAAAA,KAAK,EAAE;AAAzB,GADc,EAEd;AAAER,IAAAA,KAAK,EAAE,SAAT;AAAoBQ,IAAAA,KAAK,EAAE;AAA3B,GAFc,EAGd;AAAER,IAAAA,KAAK,EAAE,UAAT;AAAqBQ,IAAAA,KAAK,EAAE;AAA5B,GAHc,CAAhB;;AAMA,QAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpCC,IAAAA,aAAa,CAAC;AAAEZ,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAEU,KAAK,CAACE,MAAN,CAAaZ;AAA1C,KAAD,CAAb;AACD,GAFD;;AAIA,QAAMa,qBAAqB,GAAIH,KAAD,IAAW;AACvCI,IAAAA,gBAAgB,CAAC;AAAEf,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAEU,KAAK,CAACE,MAAN,CAAaZ;AAA1C,KAAD,CAAhB;AACD,GAFD;;AAIA,QAAMe,qBAAqB,GAAIL,KAAD,IAAW;AACvCM,IAAAA,gBAAgB,CAAC;AAAEjB,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAEU,KAAK,CAACV;AAAnC,KAAD,CAAhB;AACD,GAFD;;AAIA,QAAM,CAACiB,UAAD,EAAaN,aAAb,IAA8BnB,UAAU,CAACI,YAAD,EAAe;AAC3DI,IAAAA,KAAK,EAAE,EADoD,CAE3D;;AAF2D,GAAf,CAA9C;AAIA,QAAM,CAACkB,aAAD,EAAgBJ,gBAAhB,IAAoCtB,UAAU,CAACU,eAAD,EAAkB;AACpEF,IAAAA,KAAK,EAAE,EAD6D,CAEpE;;AAFoE,GAAlB,CAApD;AAKA,QAAM,CAACmB,aAAD,EAAgBH,gBAAhB,IAAoCxB,UAAU,CAACW,eAAD,EAAkB;AACpEH,IAAAA,KAAK,EAAE,EAD6D,CAEpE;;AAFoE,GAAlB,CAApD;AAMA,QAAMoB,aAAa,GAAE7B,WAAW,CAAC,MAAOmB,KAAP,IAAiB;AAC9C,QAAI;AACFA,MAAAA,KAAK,CAACW,cAAN;AACA,YAAMC,KAAK,GAAG;AACZC,QAAAA,KAAK,EAAEN,UAAU,CAACjB,KADN;AAEZwB,QAAAA,QAAQ,EAAEN,aAAa,CAAClB;AAFZ,OAAd,CAFE,CAOF;;AACA,YAAMyB,cAAc,GAAG;AACrBC,QAAAA,MAAM,EAAE,MADa;AAErBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFY;AAGrBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,KAAf;AAHe,OAAvB;AAMAS,MAAAA,OAAO,CAACC,GAAR,CAAY,WAASH,IAAI,CAACC,SAAL,CAAeR,KAAf,CAArB;AACA,YAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,MAAIf,aAAa,CAACnB,KAAlB,GAAwB,QAAzB,EAAmCyB,cAAnC,CAA5B;;AAEA,UAAI,CAACQ,QAAQ,CAACE,EAAd,EAAkB;AAChBC,QAAAA,MAAM,CAACC,KAAP,CAAa,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAjC,QAAAA,QAAQ,CAAChB,WAAW,CAACkD,MAAZ,EAAD,CAAR;AACA,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACDT,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,YAAMS,KAAK,GAAG,MAAMR,QAAQ,CAACK,IAAT,EAApB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAcS,KAA1B;AACApC,MAAAA,QAAQ,CAAChB,WAAW,CAACqD,eAAZ,CAA4BvB,aAAa,CAACnB,KAA1C,CAAD,CAAR;AACAK,MAAAA,QAAQ,CAAChB,WAAW,CAACsD,KAAZ,CAAkBF,KAAlB,CAAD,CAAR;AACAnC,MAAAA,OAAO,CAACsC,IAAR,CAAa,YAAb;AAED,KA7BD,CA6BE,OAAOC,KAAP,EAAc;AACdd,MAAAA,OAAO,CAACC,GAAR,CAAYa,KAAK,CAACC,OAAlB;AACD;AACF,GAjC6B,EAiC1B,CAAC7B,UAAD,EAAaC,aAAb,EAA4BC,aAA5B,EAA2Cd,QAA3C,CAjC0B,CAAhC;AAoCA,sBACE;AAAM,IAAA,SAAS,EAAEjB,OAAO,CAAC2D,IAAzB;AAAA,2BACE;AAAA,6BACE;AAAM,QAAA,EAAE,EAAC,WAAT;AAAA,gCACE;AAAK,UAAA,SAAS,EAAE3D,OAAO,CAAC4D,OAAxB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,EAAE,EAAC,OAFL;AAGE,YAAA,KAAK,EAAE/B,UAAU,CAACjB,KAHpB;AAIE,YAAA,QAAQ,EAAES;AAJZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAK,UAAA,SAAS,EAAErB,OAAO,CAAC4D,OAAxB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,EAAE,EAAC,UAFL;AAGE,YAAA,KAAK,EAAE9B,aAAa,CAAClB,KAHvB;AAIE,YAAA,QAAQ,EAAEa;AAJZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAiBE;AAAK,UAAA,SAAS,EAAEzB,OAAO,CAAC4D,OAAxB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE,QAAC,MAAD;AACE,YAAA,EAAE,EAAC,QADL;AAEE,YAAA,OAAO,EAAEzC,OAFX;AAGE,YAAA,KAAK,EAAEA,OAAO,CAAC0C,IAAR,CAAaC,GAAG,IAAIA,GAAG,CAAClD,KAAJ,KAAcmB,aAAlC,CAHT;AAIE,YAAA,QAAQ,EAAEJ;AAJZ;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,eA4BE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,QAAjB;AAA0B,UAAA,IAAI,EAAC,WAA/B;AAA2C,UAAA,OAAO,EAAEK,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CA9GD;;GAAMhB,I;UAEajB,W,EACDQ,U;;;KAHZS,I;AAgHN,eAAeA,IAAf","sourcesContent":["import { useDispatch } from \"react-redux\";\r\n\r\nimport classes from \"./Auth.module.css\";\r\nimport { authActions } from \"../../../\";\r\nimport React, { useCallback, useReducer } from \"react\";\r\n\r\nimport Select from \"react-select\";\r\nimport AuthButton from \"../UI/button/AuthButton\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst emailReducer = (state, action) => {\r\n  if (action.type === 'USER_INPUT') {\r\n    return { value: action.value };\r\n    // , isValid: action.val.includes('@') };\r\n  }\r\n  if (action.type === 'INPUT_BLUR') {\r\n    return { value: state.value };\r\n    //, isValid: state.value.includes('@') };\r\n  }\r\n  return { value: '', isValid: false };\r\n};\r\n\r\nconst passwordReducer = (state, action) => {\r\n  if (action.type === 'USER_INPUT') {\r\n    return { value: action.value };\r\n    //, isValid: action.val.trim().length > 6 };\r\n  }\r\n  if (action.type === 'INPUT_BLUR') {\r\n    return { value: state.value };\r\n    //, isValid: state.value.trim().length > 6 };\r\n  }\r\n  return { value: '' }\r\n  //, isValid: false };\r\n};\r\n\r\n\r\nconst userTypeReducer = (state, action) => {\r\n  if (action.type === 'USER_INPUT') {\r\n    return { value: action.value };\r\n    //, isValid: action.val.trim().length > 6 };\r\n  }\r\n  if (action.type === 'INPUT_BLUR') {\r\n    return { value: state.value };\r\n    //, isValid: state.value.trim().length > 6 };\r\n  }\r\n  return { value: '' }\r\n  //, isValid: false };\r\n};\r\n\r\n\r\nconst Auth = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const options = [\r\n    { value: \"admin\", label: \"Admin\" },\r\n    { value: \"company\", label: \"Company\" },\r\n    { value: \"customer\", label: \"Customer\" },\r\n  ];\r\n\r\n  const emailChangeHandler = (event) => {\r\n    dispatchEmail({ type: 'USER_INPUT', value: event.target.value });\r\n  };\r\n\r\n  const passwordChangeHandler = (event) => {\r\n    dispatchPassword({ type: 'USER_INPUT', value: event.target.value });\r\n  };\r\n\r\n  const userTypeChangeHandler = (event) => {\r\n    dispatchUserType({ type: 'USER_INPUT', value: event.value });\r\n  };\r\n\r\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\r\n    value: '',\r\n    //isValid: null,\r\n  });\r\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\r\n    value: '',\r\n    //isValid: null,\r\n  });\r\n\r\n  const [userTypeState, dispatchUserType] = useReducer(userTypeReducer, {\r\n    value: '',\r\n    //isValid: null,\r\n  });\r\n\r\n\r\n  const submitHandler =useCallback(async (event) => {\r\n      try {\r\n        event.preventDefault();\r\n        const creds = {\r\n          email: emailState.value,\r\n          password: passwordState.value\r\n        };\r\n  \r\n        // POST request using fetch inside useEffect React hook\r\n        const requestOptions = {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(creds),\r\n        };\r\n  \r\n        console.log(\"post: \"+JSON.stringify(creds));\r\n        const response = await fetch(\"/\"+userTypeState.value+\"/login\", requestOptions);\r\n\r\n        if (!response.ok) {\r\n          window.alert(await response.text());\r\n          dispatch(authActions.logout());\r\n          throw new Error(\"Authintication fails!\");\r\n        }\r\n        console.log(\"Okay!\");\r\n        const token = await response.text();\r\n        console.log(\"Got token: \"+token);\r\n        dispatch(authActions.userTypeHandler(userTypeState.value));\r\n        dispatch(authActions.login(token));\r\n        history.push(\"/dashboard\")\r\n\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    } , [emailState, passwordState, userTypeState, dispatch])\r\n  \r\n\r\n  return (\r\n    <main className={classes.auth}>\r\n      <section>\r\n        <form id=\"loginform\" >\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={emailState.value}\r\n              onChange={emailChangeHandler} />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              input={passwordState.value}\r\n              onChange={passwordChangeHandler} />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"select\">Role</label>\r\n            \r\n            <Select\r\n              id=\"select\"\r\n              options={options}\r\n              value={options.find(obj => obj.value === userTypeState)}\r\n              onChange={userTypeChangeHandler} \r\n            />\r\n            \r\n          </div>\r\n          <AuthButton type=\"submit\" form=\"loginform\" onClick={submitHandler}>Login</AuthButton>\r\n        </form>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}