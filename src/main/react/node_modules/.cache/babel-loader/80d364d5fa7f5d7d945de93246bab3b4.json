{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noada\\\\eclipse-workspace\\\\CouponSystemSpring\\\\src\\\\main\\\\react\\\\src\\\\components\\\\Client\\\\ClientForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef } from \"react\";\nimport classes from './Client.module.css';\nimport fetchWrapper from \"../../helper/fetchWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ClientForm = props => {\n  _s();\n\n  const userType = useSelector(state => state.auth.userType);\n  const token = useSelector(state => state.auth.token);\n  const requestClient = props.requestClient;\n  const emailRef = useRef(\"\");\n  const passwordRef = useRef(\"\");\n  const nameRef = useRef(\"\");\n  const firstNameRef = useRef(\"\");\n  const lastNameRef = useRef(\"\");\n  const submitHandler = useCallback(async event => {\n    event.preventDefault();\n    let clientToSend;\n\n    if (requestClient === \"company\") {\n      clientToSend = {\n        name: nameRef.current.value,\n        password: passwordRef.current.value,\n        email: emailRef.current.value\n      };\n    }\n\n    if (requestClient === \"customer\") {\n      clientToSend = {\n        firstName: firstNameRef.current.value,\n        lastName: lastNameRef.current.value,\n        password: passwordRef.current.value,\n        email: emailRef.current.value\n      };\n    }\n\n    let method;\n    let path;\n\n    if (!props.defaultData) {\n      method = \"POST\";\n      path = userType + \"/add/\" + requestClient;\n    } else {\n      clientToSend = {\n        id: props.defaultData.id,\n        ...clientToSend\n      };\n      method = \"PUT\";\n      path = userType + \"/update/\" + requestClient;\n    }\n\n    try {\n      const data = await fetchWrapper.fetch(method, path, clientToSend, token, () => {\n        console.log(\"error\");\n      });\n      clientToSend = {\n        clientType: props.defaultData.clientType,\n        ...clientToSend\n      };\n      console.log(clientToSend);\n      props.onSave(clientToSend);\n      console.log(\"client sent to server: \" + clientToSend);\n      console.log(\"Got Response: \" + JSON.stringify(data));\n    } catch (error) {\n      console.log(error.message);\n      setError(error.message);\n    }\n  });\n\n  const onCancel = () => {\n    if (window.confirm(\"are you sure you want to cancel?\")) {\n      props.onCancel();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    className: classes['client-form'],\n    children: [requestClient === \"company\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"name\",\n        id: \"name\",\n        ref: nameRef,\n        required: true,\n        defaultValue: !props.defaultData ? \"\" : props.defaultData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 45\n    }, this), requestClient === \"customer\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"firstName\",\n        id: \"firstName\",\n        ref: firstNameRef,\n        required: true,\n        defaultValue: !props.defaultData ? \"\" : props.defaultData.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 46\n    }, this), requestClient === \"customer\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"lastName\",\n        id: \"lastName\",\n        ref: lastNameRef,\n        required: true,\n        defaultValue: !props.defaultData ? \"\" : props.defaultData.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 46\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        ref: emailRef,\n        defaultValue: !props.defaultData ? \"\" : props.defaultData.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        ref: passwordRef,\n        required: true,\n        defaultValue: !props.defaultData ? \"\" : props.defaultData.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCancel,\n        type: \"reset\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ClientForm, \"uGzV+g5tCV2+vt/k/NgXWw4BFmo=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ClientForm;\nexport default ClientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientForm\");","map":{"version":3,"sources":["C:/Users/noada/eclipse-workspace/CouponSystemSpring/src/main/react/src/components/Client/ClientForm.js"],"names":["React","useCallback","useRef","classes","fetchWrapper","useSelector","ClientForm","props","userType","state","auth","token","requestClient","emailRef","passwordRef","nameRef","firstNameRef","lastNameRef","submitHandler","event","preventDefault","clientToSend","name","current","value","password","email","firstName","lastName","method","path","defaultData","id","data","fetch","console","log","clientType","onSave","JSON","stringify","error","message","setError","onCancel","window","confirm"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef } from \"react\";\r\n\r\nimport classes from './Client.module.css'\r\nimport fetchWrapper from \"../../helper/fetchWrapper\"\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ClientForm = (props) => {\r\n\r\n    const userType = useSelector(state => state.auth.userType);\r\n    const token = useSelector(state => state.auth.token);\r\n\r\n    const requestClient = props.requestClient;\r\n    const emailRef = useRef(\"\");\r\n    const passwordRef = useRef(\"\");\r\n    const nameRef = useRef(\"\");\r\n    const firstNameRef = useRef(\"\");\r\n    const lastNameRef = useRef(\"\");\r\n\r\n    const submitHandler = useCallback(async (event) => {\r\n        event.preventDefault();\r\n        let clientToSend;\r\n        if (requestClient === \"company\") {\r\n            clientToSend = {\r\n                name: nameRef.current.value,\r\n                password: passwordRef.current.value,\r\n                email: emailRef.current.value\r\n            }\r\n        }\r\n        if (requestClient === \"customer\") {\r\n            clientToSend = {\r\n                firstName: firstNameRef.current.value,\r\n                lastName: lastNameRef.current.value,\r\n                password: passwordRef.current.value,\r\n                email: emailRef.current.value,\r\n\r\n            }\r\n\r\n        }\r\n        let method;\r\n        let path;\r\n        if (!props.defaultData) {\r\n            method = \"POST\";\r\n            path = userType + \"/add/\" + requestClient\r\n        }\r\n        else {\r\n            clientToSend = { id: props.defaultData.id, ...clientToSend }\r\n            method = \"PUT\";\r\n            path = userType + \"/update/\" + requestClient\r\n\r\n        }\r\n        try {\r\n            const data = await fetchWrapper.fetch(method, path, clientToSend, token, () => {\r\n                console.log(\"error\");\r\n            })\r\n            clientToSend = { clientType: props.defaultData.clientType, ...clientToSend }\r\n            console.log(clientToSend)\r\n            props.onSave(clientToSend);\r\n            console.log(\"client sent to server: \" + clientToSend);\r\n            console.log(\"Got Response: \" + JSON.stringify(data));\r\n\r\n        } catch (error) {\r\n\r\n            console.log(error.message);\r\n            setError(error.message);\r\n        }\r\n\r\n    })\r\n\r\n    const onCancel = () => {\r\n        if (window.confirm(\"are you sure you want to cancel?\")) {\r\n            props.onCancel();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler} className={classes['client-form']}>\r\n            {requestClient === \"company\" && <div >\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                    type=\"name\"\r\n                    id=\"name\"\r\n                    ref={nameRef}\r\n                    required={true}\r\n                    defaultValue={!props.defaultData ? \"\" : props.defaultData.name}\r\n                />\r\n            </div>}\r\n            {requestClient === \"customer\" && <div >\r\n                <label htmlFor=\"firstName\">First name</label>\r\n                <input\r\n                    type=\"firstName\"\r\n                    id=\"firstName\"\r\n                    ref={firstNameRef}\r\n                    required={true}\r\n                    defaultValue={!props.defaultData ? \"\" : props.defaultData.firstName}\r\n                />\r\n            </div>}\r\n            {requestClient === \"customer\" && <div >\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                <input\r\n                    type=\"lastName\"\r\n                    id=\"lastName\"\r\n                    ref={lastNameRef}\r\n                    required={true}\r\n                    defaultValue={!props.defaultData ? \"\" : props.defaultData.lastName}\r\n\r\n                />\r\n            </div>}\r\n\r\n            <div >\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    ref={emailRef}\r\n                    defaultValue={!props.defaultData ? \"\" : props.defaultData.email}\r\n                />\r\n            </div>\r\n            <div >\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    ref={passwordRef}\r\n                    required={true}\r\n                    defaultValue={!props.defaultData ? \"\" : props.defaultData.password}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button onClick={onCancel} type=\"reset\" >Cancel</button>\r\n                <button type=\"submit\">Save</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ClientForm"]},"metadata":{},"sourceType":"module"}