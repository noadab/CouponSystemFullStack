{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialAuthState = {\n  isAuthenticated: false,\n  userType: null,\n  token: 0\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state, action) {\n      state.isAuthenticated = true;\n      state.token = action.payload;\n      localStorage.setItem('token', action.payload);\n      localStorage.setItem('isLoggedIn', true);\n      console.log(\"Save the new token: \" + state.token);\n    },\n\n    logout(state) {\n      let token = localStorage.getItem('token');\n      fetch('api/logout/' + token, {\n        method: 'DELETE'\n      }).then(() => element.innerHTML = 'Delete successful');\n      state.isAuthenticated = false;\n      state.token = 0;\n      state.userType = null;\n      localStorage.removeItem('token');\n      localStorage.removeItem('isLoggedIn');\n      localStorage.removeItem('userType');\n    },\n\n    userTypeHandler(state, action) {\n      state.userType = action.payload;\n      localStorage.setItem('userType', action.payload);\n      console.log(state.userType);\n    }\n\n  }\n});\nexport const authActions = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"sources":["C:/Users/bar86/Documents/GitHub/CouponSystemFinal/CouponSystemSpring/src/main/react/src/store/auth.js"],"names":["createSlice","initialAuthState","isAuthenticated","userType","token","authSlice","name","initialState","reducers","login","state","action","payload","localStorage","setItem","console","log","logout","getItem","fetch","method","then","element","innerHTML","removeItem","userTypeHandler","authActions","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,eAAe,EAAE,KADM;AAEvBC,EAAAA,QAAQ,EAAE,IAFa;AAGvBC,EAAAA,KAAK,EAAE;AAHgB,CAAzB;AAMA,MAAMC,SAAS,GAAGL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,gBADsB;AAE5BC,EAAAA,YAAY,EAAEN,gBAFc;AAG5BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACnBD,MAAAA,KAAK,CAACR,eAAN,GAAwB,IAAxB;AACAQ,MAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACC,OAArB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,MAAM,CAACC,OAArC;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,IAAnC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBN,KAAK,CAACN,KAA3C;AACD,KAPO;;AAQRa,IAAAA,MAAM,CAACP,KAAD,EAAQ;AACZ,UAAIN,KAAK,GAAGS,YAAY,CAACK,OAAb,CAAqB,OAArB,CAAZ;AACAC,MAAAA,KAAK,CAAC,gBAAgBf,KAAjB,EAAwB;AAAEgB,QAAAA,MAAM,EAAE;AAAV,OAAxB,CAAL,CACGC,IADH,CACQ,MAAMC,OAAO,CAACC,SAAR,GAAoB,mBADlC;AAEAb,MAAAA,KAAK,CAACR,eAAN,GAAwB,KAAxB;AACAQ,MAAAA,KAAK,CAACN,KAAN,GAAc,CAAd;AACAM,MAAAA,KAAK,CAACP,QAAN,GAAiB,IAAjB;AACAU,MAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACAX,MAAAA,YAAY,CAACW,UAAb,CAAwB,YAAxB;AACAX,MAAAA,YAAY,CAACW,UAAb,CAAwB,UAAxB;AAED,KAnBO;;AAoBRC,IAAAA,eAAe,CAACf,KAAD,EAAQC,MAAR,EAAgB;AAC7BD,MAAAA,KAAK,CAACP,QAAN,GAAiBQ,MAAM,CAACC,OAAxB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,MAAM,CAACC,OAAxC;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACP,QAAlB;AACD;;AAxBO;AAHkB,CAAD,CAA7B;AA+BA,OAAO,MAAMuB,WAAW,GAAGrB,SAAS,CAACsB,OAA9B;AAEP,eAAetB,SAAS,CAACuB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialAuthState = {\r\n  isAuthenticated: false,\r\n  userType: null,\r\n  token: 0,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'authentication',\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state, action) {\r\n      state.isAuthenticated = true;\r\n      state.token = action.payload;\r\n      localStorage.setItem('token', action.payload);\r\n      localStorage.setItem('isLoggedIn', true);\r\n      console.log(\"Save the new token: \" + state.token);\r\n    },\r\n    logout(state) {\r\n      let token = localStorage.getItem('token');\r\n      fetch('api/logout/' + token, { method: 'DELETE' })\r\n        .then(() => element.innerHTML = 'Delete successful');\r\n      state.isAuthenticated = false;\r\n      state.token = 0;\r\n      state.userType = null;\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('isLoggedIn');\r\n      localStorage.removeItem('userType');\r\n\r\n    },\r\n    userTypeHandler(state, action) {\r\n      state.userType = action.payload;\r\n      localStorage.setItem('userType', action.payload);\r\n      console.log(state.userType);\r\n    }\r\n  },\r\n});\r\n\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default authSlice.reducer;"]},"metadata":{},"sourceType":"module"}