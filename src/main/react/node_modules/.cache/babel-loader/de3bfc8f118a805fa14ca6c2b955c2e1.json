{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noada\\\\eclipse-workspace\\\\CouponSystemSpring\\\\src\\\\main\\\\react\\\\src\\\\pages\\\\CustomerDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Client from \"../components/Client/Client\";\nimport CouponFetch from '../components/Coupon/CouponFetch';\nimport fetchWrapper from '../helper/fetchWrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CompanyDashboard() {\n  _s();\n\n  const token = useSelector(state => state.auth.token); //const dispatch = useDispatch();\n\n  const [customer, setCustomer] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchClientHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    const data = await fetchWrapper.get(\"/customer/customerDetails/\" + token, () => {\n      setError(data.text());\n    });\n    console.log(data);\n    const transformed = {\n      clientType: \"customer\",\n      id: data.id,\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email,\n      password: data.password\n    };\n    setCustomer(transformed);\n  });\n  useEffect(() => {\n    fetchClientHandler();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Client, {\n      client: customer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CouponFetch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CompanyDashboard, \"W5oxz1xoFtJ0OeXwIhsFl3u7AgM=\", false, function () {\n  return [useSelector];\n});\n\n_c = CompanyDashboard;\nexport default CompanyDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyDashboard\");","map":{"version":3,"sources":["C:/Users/noada/eclipse-workspace/CouponSystemSpring/src/main/react/src/pages/CustomerDashboard.js"],"names":["React","useCallback","useEffect","useState","useSelector","Client","CouponFetch","fetchWrapper","CompanyDashboard","token","state","auth","customer","setCustomer","isLoading","setIsLoading","error","setError","fetchClientHandler","data","get","text","console","log","transformed","clientType","id","firstName","lastName","email","password"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AAEA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AACxB,QAAMC,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,KAArB,CAAzB,CADwB,CAE1B;;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMe,kBAAkB,GAAGjB,WAAW,CAAC,YAAU;AAC/Cc,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,UAAME,IAAI,GAAG,MAAMZ,YAAY,CAACa,GAAb,CAAiB,+BAA6BX,KAA9C,EAAqD,MAAM;AAC5EQ,MAAAA,QAAQ,CAACE,IAAI,CAACE,IAAL,EAAD,CAAR;AACD,KAFkB,CAAnB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,UAAMK,WAAW,GAAE;AACjBC,MAAAA,UAAU,EAAC,UADM;AAEjBC,MAAAA,EAAE,EAAEP,IAAI,CAACO,EAFQ;AAGjBC,MAAAA,SAAS,EAAER,IAAI,CAACQ,SAHC;AAIjBC,MAAAA,QAAQ,EAAET,IAAI,CAACS,QAJE;AAKjBC,MAAAA,KAAK,EAAEV,IAAI,CAACU,KALK;AAMjBC,MAAAA,QAAQ,EAAEX,IAAI,CAACW;AANE,KAAnB;AAQAjB,IAAAA,WAAW,CAACW,WAAD,CAAX;AACD,GAhBqC,CAAtC;AAiBAtB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,EAFM,CAAT;AAIE,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEN;AAAhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAnCQJ,gB;UACSJ,W;;;KADTI,gB;AAqCT,eAAeA,gBAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Client from \"../components/Client/Client\";\r\n\r\nimport CouponFetch from '../components/Coupon/CouponFetch'\r\nimport fetchWrapper from '../helper/fetchWrapper'\r\n\r\nfunction CompanyDashboard() {\r\n    const token = useSelector(state => state.auth.token);\r\n  //const dispatch = useDispatch();\r\n  const [customer, setCustomer] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchClientHandler = useCallback(async ()=>{\r\n    setIsLoading(true);\r\n    setError(null);\r\n    const data = await fetchWrapper.get(\"/customer/customerDetails/\"+token, () => {\r\n      setError(data.text());\r\n    });\r\n    console.log(data);\r\n    const transformed= {\r\n      clientType:\"customer\",\r\n      id: data.id,\r\n      firstName: data.firstName,\r\n      lastName: data.lastName,\r\n      email: data.email,\r\n      password: data.password\r\n    }\r\n    setCustomer(transformed)\r\n  })\r\n  useEffect(() => {\r\n    fetchClientHandler();\r\n  }, []);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Client client={customer}/>\r\n            <CouponFetch/>\r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default CompanyDashboard;"]},"metadata":{},"sourceType":"module"}