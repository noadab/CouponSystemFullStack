{"ast":null,"code":"// const urlPrefix = \"https://noa-project-f9caa-default-rtdb.firebaseio.com/\";\nexport const FOOD_LIST = \"food_list\";\nexport const INSPIRATION_LIST = \"inspiration_says\";\nconst fetchWrapper = {\n  get: async (name, onfail) => getHandler(name),\n  fetch: async (method, name, dataToSend, onfail) => putHandler(method, name, dataToSend, onfail),\n  delete: async (method, name, token, onFail) => deleteHandler(method, name, token, onFail)\n};\n\nconst logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('isLoggedIn');\n  localStorage.removeItem('userType');\n};\n\nconst OK = \"Ok\"; // Custome exception\n\nconst NOT_FOUND = \"Not found\"; // \n\nconst METHOD_NOT_ALLOWED = \"Method not allowed\"; // Session end\n\nconst BAD_REQUEST = \"Bad request\";\n\nasync function getHandler(name) {\n  const response = await fetch(name);\n  console.log(response);\n\n  if (response.statusText === BAD_REQUEST) {\n    alert(await response.text());\n    logout();\n    throw new Error(response.statusText);\n  } else if (!response.ok) {\n    throw new Error(await response.text());\n  }\n\n  const data = await response.json();\n  console.log(\"fetchWrapper got data, len=\" + Object.keys(data).length);\n  return data;\n}\n\n;\n\nasync function putHandler(method, name, dataToSend, token) {\n  let onFail = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : () => {};\n  const requestOptions = {\n    method: method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      token: token\n    },\n    body: JSON.stringify(dataToSend)\n  };\n  const response = await fetch(name, requestOptions);\n\n  if (response.statusText === BAD_REQUEST) {\n    logout();\n    alert(await response.text());\n    throw new Error(await response.text());\n  } else if (!response.ok) {\n    alert(await response.text());\n    throw new Error(response.json());\n  }\n\n  alert(await response.text());\n  return;\n}\n\n;\n\nasync function deleteHandler(method, name, token) {\n  let onFail = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : () => {};\n  const requestOptions = {\n    method: method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      token: token\n    }\n  };\n  const response = await fetch(name, requestOptions);\n\n  if (response.statusText === BAD_REQUEST) {\n    alert(await response.text());\n    logout();\n    throw new Error(await response.text());\n  } else if (!response.ok) {\n    alert(await response.text());\n    throw new Error(await response.text());\n  }\n\n  alert(await response.text());\n  const data = await response.json();\n  return data;\n}\n\nexport default fetchWrapper;","map":{"version":3,"sources":["C:/Users/noada/eclipse-workspace/CouponSystemSpring/src/main/react/src/helper/fetchWrapper.js"],"names":["FOOD_LIST","INSPIRATION_LIST","fetchWrapper","get","name","onfail","getHandler","fetch","method","dataToSend","putHandler","delete","token","onFail","deleteHandler","logout","localStorage","removeItem","OK","NOT_FOUND","METHOD_NOT_ALLOWED","BAD_REQUEST","response","console","log","statusText","alert","text","Error","ok","data","json","Object","keys","length","requestOptions","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["\r\n// const urlPrefix = \"https://noa-project-f9caa-default-rtdb.firebaseio.com/\";\r\n\r\nexport const FOOD_LIST = \"food_list\";\r\nexport const INSPIRATION_LIST = \"inspiration_says\";\r\n\r\nconst fetchWrapper = {\r\n  get: async (name, onfail)=> getHandler(name),\r\n  fetch: async (method, name, dataToSend, onfail)=> putHandler(method, name, dataToSend, onfail),\r\n  delete: async (method, name, token, onFail)=>deleteHandler(method, name, token, onFail)\r\n}\r\n\r\nconst logout=()=>{\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('isLoggedIn');\r\n  localStorage.removeItem('userType');\r\n}\r\n\r\n\r\nconst OK=\"Ok\";\r\n// Custome exception\r\nconst NOT_FOUND=\"Not found\"\r\n// \r\nconst METHOD_NOT_ALLOWED=\"Method not allowed\"\r\n// Session end\r\nconst BAD_REQUEST=\"Bad request\"\r\n\r\nasync function getHandler(name)\r\n{\r\n    const response = await fetch(name);\r\n    console.log(response)\r\n    if (response.statusText === BAD_REQUEST) {\r\n      alert(await response.text());\r\n      logout();\r\n      throw new Error(response.statusText);\r\n    } \r\n    else if (!response.ok) {\r\n      throw new Error(await response.text());\r\n    }\r\n \r\n    const data = await response.json();\r\n    console.log(\"fetchWrapper got data, len=\" + Object.keys(data).length);\r\n    return data;\r\n  \r\n};\r\n\r\nasync function putHandler(method, name, dataToSend, token, onFail=()=>{})\r\n{\r\n  \r\n  const requestOptions = {\r\n      method: method,\r\n      headers: { \"Content-Type\": \"application/json\",  token: token},\r\n      body: JSON.stringify(dataToSend)\r\n    };\r\n    const response = await fetch(name, requestOptions);\r\n    if (response.statusText === BAD_REQUEST) {\r\n      logout();\r\n      alert(await response.text());\r\n      throw new Error(await response.text());\r\n    } \r\n\r\n    else if (!response.ok) {\r\n      alert(await response.text())\r\n      throw new Error(response.json());\r\n    }\r\n\r\n    alert(await response.text());\r\n    return ;\r\n \r\n};\r\n\r\nasync function deleteHandler(method, name, token, onFail=()=>{})\r\n{\r\n  \r\n    const requestOptions = {\r\n      method: method,\r\n      headers: { \"Content-Type\": \"application/json\",  token: token}\r\n    };\r\n    const response = await fetch(name, requestOptions);\r\n    if (response.statusText === BAD_REQUEST) {\r\n      alert(await response.text());\r\n      logout();\r\n      throw new Error(await response.text());\r\n    }\r\n    \r\n    else if (!response.ok) {\r\n      alert(await response.text())\r\n      throw new Error(await response.text());\r\n    }\r\n    alert(await response.text());\r\n    const data = await response.json();\r\n    return data;\r\n  \r\n  }\r\n\r\n\r\nexport default fetchWrapper;"]},"metadata":{},"sourceType":"module"}