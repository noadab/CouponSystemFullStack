{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noada\\\\eclipse-workspace\\\\CouponSystemSpring\\\\src\\\\main\\\\react\\\\src\\\\components\\\\Client\\\\Client.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from 'react-redux';\nimport fetchWrapper from '../../helper/fetchWrapper';\nimport classes from \"./Client.module.css\";\nimport CardClient from \"../../UI/CardClient\";\nimport ClientForm from \"./ClientForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Client = props => {\n  _s();\n\n  const userType = useSelector(state => state.auth.userType);\n  const token = useSelector(state => state.auth.token);\n  const [currClient, setCurrClient] = useState(props);\n  const [error, setError] = useState(null);\n  const [isAvailClient, setAvailClient] = useState(true);\n  const [edit, setEdit] = useState(false);\n\n  let content = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"cant show user details\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 17\n  }, this);\n\n  content = /*#__PURE__*/_jsxDEV(CardClient, {\n    client: currClient\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this);\n  const deleteClient = useCallback(async event => {\n    event.preventDefault();\n    setError(null);\n    let method = \"DELETE\";\n    let path = \"admin/delete/\" + currClient.clientType + \"/\" + currClient.id;\n\n    try {\n      const data = await fetchWrapper.delete(method, path, token, () => {});\n      setAvailClient(false);\n    } catch (error) {\n      console.log(error.message);\n      setError(error.message);\n    }\n  }, []);\n\n  const deleteChangeHandler = event => {\n    if (window.confirm(\"are you sure you want to delete this client?\")) {\n      deleteClient(event);\n    }\n  };\n\n  const updateClientChangeHandler = () => {\n    setEdit(true);\n  };\n\n  const onCancel = () => {\n    setEdit(false);\n  };\n\n  const onSave = props => {\n    setEdit(false);\n    setCurrClient(props);\n  };\n\n  if (edit) {\n    content = /*#__PURE__*/_jsxDEV(ClientForm, {\n      defaultData: currClient,\n      requestClient: currClient.clientType,\n      onCancel: onCancel,\n      onSave: onSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (error) {\n    /*#__PURE__*/\n    _jsxDEV(\"section\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.client,\n      children: [isAvailClient && content, userType === \"admin\" && isAvailClient && !edit && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateClientChangeHandler,\n        children: \"update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 60\n      }, this), userType === \"admin\" && isAvailClient && !edit && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteChangeHandler,\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 60\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Client, \"YN6FIphKRvS+BhOJu1iiE8XlfSI=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Client;\nexport default Client;\n\nvar _c;\n\n$RefreshReg$(_c, \"Client\");","map":{"version":3,"sources":["C:/Users/noada/eclipse-workspace/CouponSystemSpring/src/main/react/src/components/Client/Client.js"],"names":["React","useCallback","useEffect","useState","useSelector","fetchWrapper","classes","CardClient","ClientForm","Client","props","userType","state","auth","token","currClient","setCurrClient","error","setError","isAvailClient","setAvailClient","edit","setEdit","content","deleteClient","event","preventDefault","method","path","clientType","id","data","delete","console","log","message","deleteChangeHandler","window","confirm","updateClientChangeHandler","onCancel","onSave","client"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport fetchWrapper from '../../helper/fetchWrapper'\r\n\r\nimport classes from \"./Client.module.css\"\r\nimport CardClient from \"../../UI/CardClient\"\r\nimport ClientForm from \"./ClientForm\";\r\n\r\nconst Client = (props) => {\r\n  \r\n  const userType = useSelector(state => state.auth.userType);\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  const [currClient,setCurrClient]= useState(props);\r\n  const [error, setError] = useState(null);\r\n  const [isAvailClient, setAvailClient] = useState(true);\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  let content = <div>cant show user details</div>\r\n    \r\n  content = <CardClient client={currClient} />\r\n     \r\n\r\n  const deleteClient = useCallback(async (event) => {\r\n    event.preventDefault();\r\n    setError(null);\r\n    let method = \"DELETE\";\r\n    let path = \"admin/delete/\" + currClient.clientType + \"/\" + currClient.id;\r\n    try {\r\n        const data = await fetchWrapper.delete(method, path, token, () => {})\r\n        setAvailClient(false);\r\n     \r\n    }catch (error) {\r\n      console.log(error.message);\r\n      setError(error.message);\r\n  }\r\n  }, []);\r\n\r\n  const deleteChangeHandler = (event) => {\r\n    if (window.confirm(\"are you sure you want to delete this client?\")) {\r\n      deleteClient(event);\r\n    }\r\n  }\r\n\r\n  const updateClientChangeHandler = () => {\r\n    setEdit(true);\r\n  }\r\n\r\n  const onCancel = () => {\r\n    setEdit(false);\r\n\r\n  }\r\n  const onSave = (props) => {\r\n    setEdit(false);\r\n    setCurrClient(props);\r\n  }\r\n\r\n  if (edit) {\r\n    content = <ClientForm defaultData={currClient} requestClient={currClient.clientType} onCancel={onCancel} onSave={onSave} />\r\n  \r\n  }\r\n  \r\n  if (error){\r\n    <section>\r\n      {error}\r\n    </section>\r\n  }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      \r\n      <div className={classes.client}>\r\n        {isAvailClient && content}\r\n        {userType === \"admin\" &&isAvailClient &&  !edit && <button onClick={updateClientChangeHandler}>update</button>}\r\n        {userType === \"admin\" &&isAvailClient &&  !edit && <button onClick={deleteChangeHandler}>delete</button>}\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Client; "]},"metadata":{},"sourceType":"module"}